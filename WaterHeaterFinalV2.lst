;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 7/16/2020 2:23:27 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2EA2      	GOTO       1698
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00EC      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00EB      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A5      	MOVWF      37
0x000D	0x0871      	MOVF       R1, 0
0x000E	0x00A4      	MOVWF      36
0x000F	0x087B      	MOVF       R11, 0
0x0010	0x00A3      	MOVWF      35
0x0011	0x087C      	MOVF       R12, 0
0x0012	0x00A2      	MOVWF      34
0x0013	0x087D      	MOVF       R13, 0
0x0014	0x00A1      	MOVWF      33
0x0015	0x0804      	MOVF       FSR, 0
0x0016	0x00A6      	MOVWF      38
;WaterHeaterFinalV2.c,28 :: 		void interrupt(){
;WaterHeaterFinalV2.c,29 :: 		if(INTCON.INTF==1){                     // Checks the external interrupt flag bit
0x0017	0x1C8B      	BTFSS      INTCON, 1
0x0018	0x2848      	GOTO       L_interrupt0
;WaterHeaterFinalV2.c,30 :: 		INTCON.INTF = 0;                      // Resets External Interrupt Flag bit to 0
0x0019	0x108B      	BCF        INTCON, 1
;WaterHeaterFinalV2.c,31 :: 		if(OnOffState == OFF_STATE){          // Checks the condition to change the system state to on
0x001A	0x0843      	MOVF       _OnOffState, 0
0x001B	0x3A00      	XORLW      0
0x001C	0x1D03      	BTFSS      STATUS, 2
0x001D	0x2842      	GOTO       L_interrupt1
;WaterHeaterFinalV2.c,32 :: 		OnOffState = ON_STATE;              // changes the system state to on
0x001E	0x3001      	MOVLW      1
0x001F	0x00C3      	MOVWF      _OnOffState
;WaterHeaterFinalV2.c,33 :: 		EEPROMReadVal();
0x0020	0x2688      	CALL       _EEPROMReadVal
;WaterHeaterFinalV2.c,34 :: 		if((EEPROM_Val <= 75)&&(EEPROM_Val >= 35)){
0x0021	0x3080      	MOVLW      128
0x0022	0x00F0      	MOVWF      R0
0x0023	0x3080      	MOVLW      128
0x0024	0x1283      	BCF        STATUS, 5
0x0025	0x065D      	XORWF      _EEPROM_Val+1, 0
0x0026	0x0270      	SUBWF      R0, 0
0x0027	0x1D03      	BTFSS      STATUS, 2
0x0028	0x282B      	GOTO       L__interrupt50
0x0029	0x085C      	MOVF       _EEPROM_Val, 0
0x002A	0x3C4B      	SUBLW      75
L__interrupt50:
0x002B	0x1C03      	BTFSS      STATUS, 0
0x002C	0x283D      	GOTO       L_interrupt4
0x002D	0x3080      	MOVLW      128
0x002E	0x065D      	XORWF      _EEPROM_Val+1, 0
0x002F	0x00F0      	MOVWF      R0
0x0030	0x3080      	MOVLW      128
0x0031	0x0270      	SUBWF      R0, 0
0x0032	0x1D03      	BTFSS      STATUS, 2
0x0033	0x2836      	GOTO       L__interrupt51
0x0034	0x3023      	MOVLW      35
0x0035	0x025C      	SUBWF      _EEPROM_Val, 0
L__interrupt51:
0x0036	0x1C03      	BTFSS      STATUS, 0
0x0037	0x283D      	GOTO       L_interrupt4
L__interrupt47:
;WaterHeaterFinalV2.c,35 :: 		ReqTemp = EEPROM_Val;
0x0038	0x085C      	MOVF       _EEPROM_Val, 0
0x0039	0x00C6      	MOVWF      _ReqTemp
0x003A	0x085D      	MOVF       _EEPROM_Val+1, 0
0x003B	0x00C7      	MOVWF      _ReqTemp+1
;WaterHeaterFinalV2.c,36 :: 		}else{
0x003C	0x2841      	GOTO       L_interrupt5
L_interrupt4:
;WaterHeaterFinalV2.c,37 :: 		ReqTemp = 60;
0x003D	0x303C      	MOVLW      60
0x003E	0x00C6      	MOVWF      _ReqTemp
0x003F	0x3000      	MOVLW      0
0x0040	0x00C7      	MOVWF      _ReqTemp+1
;WaterHeaterFinalV2.c,38 :: 		}
L_interrupt5:
;WaterHeaterFinalV2.c,39 :: 		}else if(OnOffState == ON_STATE){     // Checks the condition to change the system state to off
0x0041	0x2848      	GOTO       L_interrupt6
L_interrupt1:
0x0042	0x0843      	MOVF       _OnOffState, 0
0x0043	0x3A01      	XORLW      1
0x0044	0x1D03      	BTFSS      STATUS, 2
0x0045	0x2848      	GOTO       L_interrupt7
;WaterHeaterFinalV2.c,40 :: 		OnOffState = OFF_STATE;             // Changes the system state to off
0x0046	0x01C3      	CLRF       _OnOffState
;WaterHeaterFinalV2.c,41 :: 		}else{
0x0047	0x2848      	GOTO       L_interrupt8
L_interrupt7:
;WaterHeaterFinalV2.c,43 :: 		}
L_interrupt8:
L_interrupt6:
;WaterHeaterFinalV2.c,44 :: 		}
L_interrupt0:
;WaterHeaterFinalV2.c,45 :: 		if (INTCON.TMR0IF==1){
0x0048	0x1D0B      	BTFSS      INTCON, 2
0x0049	0x28A6      	GOTO       L_interrupt9
;WaterHeaterFinalV2.c,46 :: 		TMR0=100;                                                           // Loading Timer0 Module Register with a value that gives overflow interrupt each 10ms
0x004A	0x3064      	MOVLW      100
0x004B	0x0081      	MOVWF      TMR0
;WaterHeaterFinalV2.c,47 :: 		INTCON.TMR0IF=0;                                                    // Resets TIMER0 Overflow Interrupt Flag bit to 0
0x004C	0x110B      	BCF        INTCON, 2
;WaterHeaterFinalV2.c,49 :: 		if((OnOffState == ON_STATE)&&(OnMode == ON_MODE_WORKING)){
0x004D	0x0843      	MOVF       _OnOffState, 0
0x004E	0x3A01      	XORLW      1
0x004F	0x1D03      	BTFSS      STATUS, 2
0x0050	0x2871      	GOTO       L_interrupt12
0x0051	0x0861      	MOVF       _OnMode, 0
0x0052	0x3A01      	XORLW      1
0x0053	0x1D03      	BTFSS      STATUS, 2
0x0054	0x2871      	GOTO       L_interrupt12
L__interrupt46:
;WaterHeaterFinalV2.c,50 :: 		Time_1_Sec++;                                     // Increases the time counter counting 1 second
0x0055	0x0AD0      	INCF       _Time_1_Sec, 1
0x0056	0x1903      	BTFSC      STATUS, 2
0x0057	0x0AD1      	INCF       _Time_1_Sec+1, 1
;WaterHeaterFinalV2.c,51 :: 		WorkingMode();
0x0058	0x25BB      	CALL       _WorkingMode
;WaterHeaterFinalV2.c,52 :: 		if(Time_1_Sec == TIME_1_SEC){                     // Checking if 1 second has passed
0x0059	0x3000      	MOVLW      0
0x005A	0x0651      	XORWF      _Time_1_Sec+1, 0
0x005B	0x1D03      	BTFSS      STATUS, 2
0x005C	0x285F      	GOTO       L__interrupt52
0x005D	0x3064      	MOVLW      100
0x005E	0x0650      	XORWF      _Time_1_Sec, 0
L__interrupt52:
0x005F	0x1D03      	BTFSS      STATUS, 2
0x0060	0x2870      	GOTO       L_interrupt13
;WaterHeaterFinalV2.c,53 :: 		Time_1_Sec = 0;                                   // Ressetting the 1 secondd counter value to 0
0x0061	0x01D0      	CLRF       _Time_1_Sec
0x0062	0x01D1      	CLRF       _Time_1_Sec+1
;WaterHeaterFinalV2.c,54 :: 		if(HeatingStateLED == LED_ON){                  // Checking if current Heating state LED is On state
0x0063	0x0849      	MOVF       _HeatingStateLED, 0
0x0064	0x3A01      	XORLW      1
0x0065	0x1D03      	BTFSS      STATUS, 2
0x0066	0x2869      	GOTO       L_interrupt14
;WaterHeaterFinalV2.c,55 :: 		HeatingStateLED = LED_OFF;                    // Setting Heating state LED to Off state
0x0067	0x01C9      	CLRF       _HeatingStateLED
;WaterHeaterFinalV2.c,56 :: 		}else if(HeatingStateLED == LED_OFF){           // Checking if current Heating state LED is Off state
0x0068	0x2870      	GOTO       L_interrupt15
L_interrupt14:
0x0069	0x0849      	MOVF       _HeatingStateLED, 0
0x006A	0x3A00      	XORLW      0
0x006B	0x1D03      	BTFSS      STATUS, 2
0x006C	0x2870      	GOTO       L_interrupt16
;WaterHeaterFinalV2.c,57 :: 		HeatingStateLED = LED_ON;                     // Setting Heating state LED to On state
0x006D	0x3001      	MOVLW      1
0x006E	0x00C9      	MOVWF      _HeatingStateLED
;WaterHeaterFinalV2.c,58 :: 		}else{
0x006F	0x2870      	GOTO       L_interrupt17
L_interrupt16:
;WaterHeaterFinalV2.c,60 :: 		}
L_interrupt17:
L_interrupt15:
;WaterHeaterFinalV2.c,61 :: 		}
L_interrupt13:
;WaterHeaterFinalV2.c,63 :: 		}
0x0070	0x28A6      	GOTO       L_interrupt18
L_interrupt12:
;WaterHeaterFinalV2.c,65 :: 		else if((OnOffState == ON_STATE)&&(OnMode == ON_MODE_TEMP_SETTING)){
0x0071	0x0843      	MOVF       _OnOffState, 0
0x0072	0x3A01      	XORLW      1
0x0073	0x1D03      	BTFSS      STATUS, 2
0x0074	0x28A6      	GOTO       L_interrupt21
0x0075	0x0861      	MOVF       _OnMode, 0
0x0076	0x3A00      	XORLW      0
0x0077	0x1D03      	BTFSS      STATUS, 2
0x0078	0x28A6      	GOTO       L_interrupt21
L__interrupt45:
;WaterHeaterFinalV2.c,66 :: 		Time_5_Sec++;                // Increases the time counter counting 5 seconds
0x0079	0x0AD4      	INCF       _Time_5_Sec, 1
0x007A	0x1903      	BTFSC      STATUS, 2
0x007B	0x0AD5      	INCF       _Time_5_Sec+1, 1
;WaterHeaterFinalV2.c,67 :: 		Time_1_Sec++;                // Increases the time counter counting 1 second
0x007C	0x0AD0      	INCF       _Time_1_Sec, 1
0x007D	0x1903      	BTFSC      STATUS, 2
0x007E	0x0AD1      	INCF       _Time_1_Sec+1, 1
;WaterHeaterFinalV2.c,68 :: 		if(Time_5_Sec == TIME_5_SEC){                // Checking if 5 seconds have passed since last button being pressed
0x007F	0x0855      	MOVF       _Time_5_Sec+1, 0
0x0080	0x3A01      	XORLW      1
0x0081	0x1D03      	BTFSS      STATUS, 2
0x0082	0x2885      	GOTO       L__interrupt53
0x0083	0x30F4      	MOVLW      244
0x0084	0x0654      	XORWF      _Time_5_Sec, 0
L__interrupt53:
0x0085	0x1D03      	BTFSS      STATUS, 2
0x0086	0x288D      	GOTO       L_interrupt22
;WaterHeaterFinalV2.c,69 :: 		EEPROMWriteVal();
0x0087	0x259E      	CALL       _EEPROMWriteVal
;WaterHeaterFinalV2.c,70 :: 		Time_5_Sec = 0;                            // Resetting the time counter counting 5 seconds to 0
0x0088	0x1283      	BCF        STATUS, 5
0x0089	0x01D4      	CLRF       _Time_5_Sec
0x008A	0x01D5      	CLRF       _Time_5_Sec+1
;WaterHeaterFinalV2.c,71 :: 		OnMode = ON_MODE_WORKING;                  // Changing operation mode to working mode (Ending the temprature setting mode)
0x008B	0x3001      	MOVLW      1
0x008C	0x00E1      	MOVWF      _OnMode
;WaterHeaterFinalV2.c,72 :: 		}
L_interrupt22:
;WaterHeaterFinalV2.c,73 :: 		if(Time_1_Sec == TIME_1_SEC){                // Checking if 1 second has passed
0x008D	0x3000      	MOVLW      0
0x008E	0x0651      	XORWF      _Time_1_Sec+1, 0
0x008F	0x1D03      	BTFSS      STATUS, 2
0x0090	0x2893      	GOTO       L__interrupt54
0x0091	0x3064      	MOVLW      100
0x0092	0x0650      	XORWF      _Time_1_Sec, 0
L__interrupt54:
0x0093	0x1D03      	BTFSS      STATUS, 2
0x0094	0x28A4      	GOTO       L_interrupt23
;WaterHeaterFinalV2.c,74 :: 		Time_1_Sec = 0;                            // Ressetting the 1 secondd counter value to 0
0x0095	0x01D0      	CLRF       _Time_1_Sec
0x0096	0x01D1      	CLRF       _Time_1_Sec+1
;WaterHeaterFinalV2.c,75 :: 		if(SegBlink == SEG_ON){                    // Checking if current blinking state of the SSD is On state
0x0097	0x0853      	MOVF       _SegBlink, 0
0x0098	0x3A01      	XORLW      1
0x0099	0x1D03      	BTFSS      STATUS, 2
0x009A	0x289D      	GOTO       L_interrupt24
;WaterHeaterFinalV2.c,76 :: 		SegBlink = SEG_OFF;                      // Setting blinking state of the SSD to Off state
0x009B	0x01D3      	CLRF       _SegBlink
;WaterHeaterFinalV2.c,77 :: 		}else if(SegBlink == SEG_OFF){             // Checking if current blinking state of the SSD is Off state
0x009C	0x28A4      	GOTO       L_interrupt25
L_interrupt24:
0x009D	0x0853      	MOVF       _SegBlink, 0
0x009E	0x3A00      	XORLW      0
0x009F	0x1D03      	BTFSS      STATUS, 2
0x00A0	0x28A4      	GOTO       L_interrupt26
;WaterHeaterFinalV2.c,78 :: 		SegBlink = SEG_ON;                       // Setting blinking state of the SSD to On state
0x00A1	0x3001      	MOVLW      1
0x00A2	0x00D3      	MOVWF      _SegBlink
;WaterHeaterFinalV2.c,79 :: 		}else{
0x00A3	0x28A4      	GOTO       L_interrupt27
L_interrupt26:
;WaterHeaterFinalV2.c,81 :: 		}
L_interrupt27:
L_interrupt25:
;WaterHeaterFinalV2.c,82 :: 		}
L_interrupt23:
;WaterHeaterFinalV2.c,83 :: 		TempSettingMode();           // Calling the temprature setting function
0x00A4	0x254D      	CALL       _TempSettingMode
;WaterHeaterFinalV2.c,84 :: 		}
0x00A5	0x28A6      	GOTO       L_interrupt28
L_interrupt21:
;WaterHeaterFinalV2.c,87 :: 		}
L_interrupt28:
L_interrupt18:
;WaterHeaterFinalV2.c,88 :: 		}
L_interrupt9:
;WaterHeaterFinalV2.c,90 :: 		}
L_end_interrupt:
L__interrupt49:
0x00A6	0x0825      	MOVF       37, 0
0x00A7	0x00F0      	MOVWF      R0
0x00A8	0x0824      	MOVF       36, 0
0x00A9	0x00F1      	MOVWF      R1
0x00AA	0x0823      	MOVF       35, 0
0x00AB	0x00FB      	MOVWF      R11
0x00AC	0x0822      	MOVF       34, 0
0x00AD	0x00FC      	MOVWF      R12
0x00AE	0x0821      	MOVF       33, 0
0x00AF	0x00FD      	MOVWF      R13
0x00B0	0x0826      	MOVF       38, 0
0x00B1	0x0084      	MOVWF      FSR
0x00B2	0x086B      	MOVF       ___savePCLATH, 0
0x00B3	0x008A      	MOVWF      PCLATH
0x00B4	0x0E6C      	SWAPF      ___saveSTATUS, 0
0x00B5	0x0083      	MOVWF      STATUS
0x00B6	0x0EFF      	SWAPF      R15, 1
0x00B7	0x0E7F      	SWAPF      R15, 0
0x00B8	0x0009      	RETFIE
; end of _interrupt
_RES032:
;__Lib_MathDouble.c,123 :: 		
;__Lib_MathDouble.c,128 :: 		
0x00B9	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,129 :: 		
0x00BA	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,130 :: 		
0x00BB	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,131 :: 		
0x00BC	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,132 :: 		
0x00BD	0x01F3      	CLRF       R3
;__Lib_MathDouble.c,133 :: 		
0x00BE	0x3000      	MOVLW      0
;__Lib_MathDouble.c,135 :: 		
L_end_RES032:
0x00BF	0x0008      	RETURN
; end of _RES032
_FIXSIGN32:
;__Lib_MathDouble.c,112 :: 		
;__Lib_MathDouble.c,116 :: 		
0x00C0	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,117 :: 		
0x00C1	0x13F2      	BCF        R2, 7
;__Lib_MathDouble.c,118 :: 		
0x00C2	0x3000      	MOVLW      0
;__Lib_MathDouble.c,120 :: 		
L_end_FIXSIGN32:
0x00C3	0x0008      	RETURN
; end of _FIXSIGN32
_SETFUN32:
;__Lib_MathDouble.c,138 :: 		
;__Lib_MathDouble.c,145 :: 		
0x00C4	0x157B      	BSF        R11, 2
;__Lib_MathDouble.c,146 :: 		
0x00C5	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,147 :: 		
0x00C6	0x28CE      	GOTO       SETFUN32EEE
;__Lib_MathDouble.c,148 :: 		
0x00C7	0x3001      	MOVLW      1
;__Lib_MathDouble.c,149 :: 		
0x00C8	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,150 :: 		
0x00C9	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,151 :: 		
0x00CA	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,152 :: 		
0x00CB	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,153 :: 		
0x00CC	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.c,154 :: 		
0x00CD	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,155 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,156 :: 		
0x00CE	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,158 :: 		
L_end_SETFUN32:
0x00CF	0x0008      	RETURN
; end of _SETFUN32
_____DoIFC:
;__Lib_System.c,15 :: 		
;__Lib_System.c,18 :: 		
0x00D0	0x1683      	BSF        STATUS, 5
0x00D1	0x1303      	BCF        STATUS, 6
0x00D2	0x0840      	MOVF       ___DoICPAddr+1, 0
0x00D3	0x008A      	MOVWF      PCLATH
;__Lib_System.c,19 :: 		
0x00D4	0x083F      	MOVF       ___DoICPAddr, 0
0x00D5	0x0082      	MOVWF      PCL
;__Lib_System.c,21 :: 		
L_end_____DoIFC:
0x00D6	0x0008      	RETURN
; end of _____DoIFC
_I2C1_Is_Idle:
;__Lib_I2C_c34.c,26 :: 		
;__Lib_I2C_c34.c,27 :: 		
0x00D7	0x1683      	BSF        STATUS, 5
0x00D8	0x1303      	BCF        STATUS, 6
0x00D9	0x1914      	BTFSC      SSPSTAT, 2
0x00DA	0x28E5      	GOTO       L_I2C1_Is_Idle0
;__Lib_I2C_c34.c,28 :: 		
0x00DB	0x301F      	MOVLW      31
0x00DC	0x0511      	ANDWF      SSPCON2, 0
0x00DD	0x00F1      	MOVWF      R1
0x00DE	0x0871      	MOVF       R1, 0
0x00DF	0x3A00      	XORLW      0
0x00E0	0x1D03      	BTFSS      STATUS, 2
0x00E1	0x28E5      	GOTO       L_I2C1_Is_Idle1
;__Lib_I2C_c34.c,29 :: 		
0x00E2	0x3001      	MOVLW      1
0x00E3	0x00F0      	MOVWF      R0
0x00E4	0x28E6      	GOTO       L_end_I2C1_Is_Idle
L_I2C1_Is_Idle1:
L_I2C1_Is_Idle0:
;__Lib_I2C_c34.c,30 :: 		
0x00E5	0x01F0      	CLRF       R0
;__Lib_I2C_c34.c,31 :: 		
L_end_I2C1_Is_Idle:
0x00E6	0x0008      	RETURN
; end of _I2C1_Is_Idle
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x00E7	0x301D      	MOVLW      29
0x00E8	0x1283      	BCF        STATUS, 5
0x00E9	0x1303      	BCF        STATUS, 6
0x00EA	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x00EB	0x0BFD      	DECFSZ     R13, 1
0x00EC	0x28EB      	GOTO       L_Delay_22us1
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x00ED	0x0008      	RETURN
; end of _Delay_22us
_Div_16x16_S_L:
;__Lib_Math.c,421 :: 		
;__Lib_Math.c,427 :: 		
0x00EE	0x0D71      	RLF        R1, 0
;__Lib_Math.c,428 :: 		
0x00EF	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,429 :: 		
0x00F0	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,430 :: 		
0x00F1	0x0874      	MOVF       R4, 0
;__Lib_Math.c,431 :: 		
0x00F2	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,432 :: 		
0x00F3	0x0875      	MOVF       R5, 0
;__Lib_Math.c,433 :: 		
0x00F4	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,434 :: 		
0x00F5	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,435 :: 		
0x00F6	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,436 :: 		
0x00F7	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,437 :: 		
0x00F8	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,439 :: 		
0x00F9	0x300F      	MOVLW      15
;__Lib_Math.c,440 :: 		
0x00FA	0x00FC      	MOVWF      R12
;__Lib_Math.c,442 :: 		
0x00FB	0x0D71      	RLF        R1, 0
;__Lib_Math.c,443 :: 		
0x00FC	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,444 :: 		
0x00FD	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,445 :: 		
0x00FE	0x0874      	MOVF       R4, 0
;__Lib_Math.c,447 :: 		
0x00FF	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,448 :: 		
0x0100	0x2907      	GOTO       $+7
;__Lib_Math.c,449 :: 		
0x0101	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,450 :: 		
0x0102	0x0875      	MOVF       R5, 0
;__Lib_Math.c,451 :: 		
0x0103	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,452 :: 		
0x0104	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,453 :: 		
0x0105	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,454 :: 		
0x0106	0x290C      	GOTO       $+6
;__Lib_Math.c,456 :: 		
0x0107	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,457 :: 		
0x0108	0x0875      	MOVF       R5, 0
;__Lib_Math.c,458 :: 		
0x0109	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,459 :: 		
0x010A	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,460 :: 		
0x010B	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,462 :: 		
0x010C	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,463 :: 		
0x010D	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,465 :: 		
0x010E	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,466 :: 		
0x010F	0x28FB      	GOTO       $-20
;__Lib_Math.c,468 :: 		
0x0110	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,469 :: 		
0x0111	0x2918      	GOTO       $+7
;__Lib_Math.c,470 :: 		
0x0112	0x0874      	MOVF       R4, 0
;__Lib_Math.c,471 :: 		
0x0113	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,472 :: 		
0x0114	0x0875      	MOVF       R5, 0
;__Lib_Math.c,473 :: 		
0x0115	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,474 :: 		
0x0116	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,475 :: 		
0x0117	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,476 :: 		
0x0118	0x0000      	NOP
;__Lib_Math.c,478 :: 		
L_end_Div_16x16_S_L:
0x0119	0x0008      	RETURN
; end of _Div_16x16_S_L
_NRM3232:
;__Lib_MathDouble.c,167 :: 		
;__Lib_MathDouble.c,173 :: 		
;__Lib_MathDouble.c,175 :: 		
0x011A	0x01A0      	CLRF       __math_tempbD
;__Lib_MathDouble.c,176 :: 		
0x011B	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,177 :: 		
0x011C	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,178 :: 		
0x011D	0x292F      	GOTO       NORM3232
;__Lib_MathDouble.c,179 :: 		
0x011E	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,180 :: 		
0x011F	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,181 :: 		
0x0120	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,182 :: 		
0x0121	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,183 :: 		
0x0122	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,184 :: 		
0x0123	0x15A0      	BSF        __math_tempbD, 3
;__Lib_MathDouble.c,186 :: 		
0x0124	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,187 :: 		
0x0125	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,188 :: 		
0x0126	0x292F      	GOTO       NORM3232
;__Lib_MathDouble.c,189 :: 		
0x0127	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,190 :: 		
0x0128	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,191 :: 		
0x0129	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,192 :: 		
0x012A	0x11A0      	BCF        __math_tempbD, 3
;__Lib_MathDouble.c,193 :: 		
0x012B	0x1620      	BSF        __math_tempbD, 4
;__Lib_MathDouble.c,195 :: 		
0x012C	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,196 :: 		
0x012D	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,197 :: 		
0x012E	0x293D      	GOTO       JPNRES032
;__Lib_MathDouble.c,198 :: 		
NORM3232:
;__Lib_MathDouble.c,199 :: 		
0x012F	0x0820      	MOVF       __math_tempbD, 0
;__Lib_MathDouble.c,200 :: 		
0x0130	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,201 :: 		
0x0131	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,202 :: 		
0x0132	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,203 :: 		
0x0133	0x2941      	GOTO       JPNSETFUN32
;__Lib_MathDouble.c,204 :: 		
0x0134	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,205 :: 		
NORM3232A:
;__Lib_MathDouble.c,206 :: 		
0x0135	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.c,207 :: 		
0x0136	0x2945      	GOTO       JMPNFIXSIGN32
;__Lib_MathDouble.c,208 :: 		
0x0137	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.c,209 :: 		
0x0138	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,210 :: 		
0x0139	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,211 :: 		
0x013A	0x0BF3      	DECFSZ     R3, 1
;__Lib_MathDouble.c,212 :: 		
0x013B	0x2935      	GOTO       NORM3232A
;__Lib_MathDouble.c,213 :: 		
0x013C	0x2941      	GOTO       JPNSETFUN32
;__Lib_MathDouble.c,214 :: 		
JPNRES032:
;__Lib_MathDouble.c,215 :: 		
0x013D	0x3001      	MOVLW      1
;__Lib_MathDouble.c,216 :: 		
0x013E	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,218 :: 		
0x013F	0x20B9      	CALL       _RES032
;__Lib_MathDouble.c,220 :: 		
0x0140	0x2948      	GOTO       NORM32EEE
;__Lib_MathDouble.c,221 :: 		
JPNSETFUN32:
;__Lib_MathDouble.c,222 :: 		
0x0141	0x3002      	MOVLW      2
;__Lib_MathDouble.c,223 :: 		
0x0142	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,225 :: 		
0x0143	0x20C4      	CALL       _SETFUN32
;__Lib_MathDouble.c,227 :: 		
0x0144	0x2948      	GOTO       NORM32EEE
;__Lib_MathDouble.c,228 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.c,229 :: 		
0x0145	0x3004      	MOVLW      4
;__Lib_MathDouble.c,230 :: 		
0x0146	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,232 :: 		
0x0147	0x20C0      	CALL       _FIXSIGN32
;__Lib_MathDouble.c,234 :: 		
NORM32EEE:
;__Lib_MathDouble.c,236 :: 		
L_end_NRM3232:
0x0148	0x0008      	RETURN
; end of _NRM3232
_SETIOV3224:
;__Lib_MathDouble.c,1000 :: 		
;__Lib_MathDouble.c,1006 :: 		
0x0149	0x147B      	BSF        R11, 0
;__Lib_MathDouble.c,1007 :: 		
0x014A	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,1008 :: 		
0x014B	0x2954      	GOTO       SETIOV3224EEE
;__Lib_MathDouble.c,1010 :: 		
0x014C	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1011 :: 		
0x014D	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,1012 :: 		
0x014E	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,1013 :: 		
0x014F	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,1014 :: 		
0x0150	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1015 :: 		
0x0151	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1016 :: 		
0x0152	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.c,1017 :: 		
0x0153	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,1018 :: 		
SETIOV3224EEE:
;__Lib_MathDouble.c,1019 :: 		
0x0154	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,1021 :: 		
L_end_SETIOV3224:
0x0155	0x0008      	RETURN
; end of _SETIOV3224
_SETFOV32:
;__Lib_MathDouble.c,79 :: 		
;__Lib_MathDouble.c,86 :: 		
0x0156	0x14FB      	BSF        R11, 1
;__Lib_MathDouble.c,87 :: 		
0x0157	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,88 :: 		
0x0158	0x2960      	GOTO       SETFOV32EEE
;__Lib_MathDouble.c,89 :: 		
0x0159	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,90 :: 		
0x015A	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,91 :: 		
0x015B	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,92 :: 		
0x015C	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,93 :: 		
0x015D	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,94 :: 		
0x015E	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.c,95 :: 		
0x015F	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,96 :: 		
SETFOV32EEE:
;__Lib_MathDouble.c,97 :: 		
0x0160	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,99 :: 		
L_end_SETFOV32:
0x0161	0x0008      	RETURN
; end of _SETFOV32
_I2C1_Stop:
;__Lib_I2C_c34.c,184 :: 		
;__Lib_I2C_c34.c,185 :: 		
0x0162	0x1683      	BSF        STATUS, 5
0x0163	0x1303      	BCF        STATUS, 6
0x0164	0x1511      	BSF        SSPCON2, 2
;__Lib_I2C_c34.c,186 :: 		
L_end_I2C1_Stop:
0x0165	0x0008      	RETURN
; end of _I2C1_Stop
_int2double:
;__Lib_MathDouble.c,1812 :: 		
;__Lib_MathDouble.c,1818 :: 		
0x0166	0x1283      	BCF        STATUS, 5
;__Lib_MathDouble.c,1819 :: 		
0x0167	0x1303      	BCF        STATUS, 6
;__Lib_MathDouble.c,1820 :: 		
0x0168	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,1821 :: 		
0x0169	0x00F8      	MOVWF      R8
;__Lib_MathDouble.c,1822 :: 		
0x016A	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,1823 :: 		
0x016B	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1824 :: 		
0x016C	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,1825 :: 		
0x016D	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1826 :: 		
0x016E	0x01F3      	CLRF       R3
;__Lib_MathDouble.c,1829 :: 		
0x016F	0x01FB      	CLRF       R11
;__Lib_MathDouble.c,1830 :: 		
0x0170	0x01FC      	CLRF       R12
;__Lib_MathDouble.c,1832 :: 		
0x0171	0x3096      	MOVLW      150
;__Lib_MathDouble.c,1833 :: 		
0x0172	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,1834 :: 		
0x0173	0x01FA      	CLRF       R10
;__Lib_MathDouble.c,1835 :: 		
0x0174	0x1FF0      	BTFSS      R0, 7
;__Lib_MathDouble.c,1836 :: 		
0x0175	0x297C      	GOTO       FLO1632EEE
;__Lib_MathDouble.c,1838 :: 		
0x0176	0x09F8      	COMF       R8, 1
;__Lib_MathDouble.c,1839 :: 		
0x0177	0x09F0      	COMF       R0, 1
;__Lib_MathDouble.c,1841 :: 		
0x0178	0x0AF8      	INCF       R8, 1
;__Lib_MathDouble.c,1842 :: 		
0x0179	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1843 :: 		
0x017A	0x0AF0      	INCF       R0, 1
;__Lib_MathDouble.c,1845 :: 		
0x017B	0x17FA      	BSF        R10, 7
;__Lib_MathDouble.c,1846 :: 		
FLO1632EEE:
;__Lib_MathDouble.c,1847 :: 		
0x017C	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,1848 :: 		
0x017D	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1849 :: 		
0x017E	0x0878      	MOVF       R8, 0
;__Lib_MathDouble.c,1850 :: 		
0x017F	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1851 :: 		
0x0180	0x01F8      	CLRF       R8
;__Lib_MathDouble.c,1852 :: 		
0x0181	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1854 :: 		
0x0182	0x211A      	CALL       _NRM3232
;__Lib_MathDouble.c,1855 :: 		
L_end_int2double:
0x0183	0x0008      	RETURN
; end of _int2double
_Wait:
;TempControl.c,36 :: 		void Wait(void){
;TempControl.c,37 :: 		PORTB.B7 = 0;        // Sets Heating state LED to LOW
0x0184	0x1283      	BCF        STATUS, 5
0x0185	0x1303      	BCF        STATUS, 6
0x0186	0x1386      	BCF        PORTB, 7
;TempControl.c,38 :: 		Time_1_Sec = 0;      // Counter variable which is to be used to count 1 second
0x0187	0x01D0      	CLRF       _Time_1_Sec
0x0188	0x01D1      	CLRF       _Time_1_Sec+1
;TempControl.c,39 :: 		PORTC.B5 = 0;        // Setting PORT C pin5 (the heater) pin as LOW (Turning the heater is off)
0x0189	0x1287      	BCF        PORTC, 5
;TempControl.c,40 :: 		PORTC.B2 = 0;        // Setting PORT C pin2 (the fan) pin as LOW (Turning the fan is off)
0x018A	0x1107      	BCF        PORTC, 2
;TempControl.c,41 :: 		}
L_end_Wait:
0x018B	0x0008      	RETURN
; end of _Wait
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x018C	0x1683      	BSF        STATUS, 5
0x018D	0x1303      	BCF        STATUS, 6
0x018E	0x0840      	MOVF       ___DoICPAddr+1, 0
0x018F	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0190	0x083F      	MOVF       ___DoICPAddr, 0
0x0191	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0192	0x0008      	RETURN
; end of _____DoICP
_ADC_Read:
;__Lib_ADC_A_C.c,68 :: 		
;__Lib_ADC_A_C.c,70 :: 		
0x0193	0x1283      	BCF        STATUS, 5
0x0194	0x1303      	BCF        STATUS, 6
0x0195	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_C.c,71 :: 		
0x0196	0x30C0      	MOVLW      192
0x0197	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,72 :: 		
0x0198	0x0960      	COMF       _vref_mask, 0
0x0199	0x00F0      	MOVWF      R0
0x019A	0x0870      	MOVF       R0, 0
0x019B	0x1683      	BSF        STATUS, 5
0x019C	0x059F      	ANDWF      ADCON1, 1
;__Lib_ADC_A_C.c,73 :: 		
0x019D	0x171F      	BSF        ADCON1, 6
;__Lib_ADC_A_C.c,74 :: 		
0x019E	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_A_C.c,75 :: 		
0x019F	0x0845      	MOVF       FARG_ADC_Read_channel, 0
0x01A0	0x00F0      	MOVWF      R0
0x01A1	0x0DF0      	RLF        R0, 1
0x01A2	0x1070      	BCF        R0, 0
0x01A3	0x0DF0      	RLF        R0, 1
0x01A4	0x1070      	BCF        R0, 0
0x01A5	0x0DF0      	RLF        R0, 1
0x01A6	0x1070      	BCF        R0, 0
0x01A7	0x0870      	MOVF       R0, 0
0x01A8	0x1283      	BCF        STATUS, 5
0x01A9	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,78 :: 		
0x01AA	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_C.c,81 :: 		
0x01AB	0x20E7      	CALL       _Delay_22us
;__Lib_ADC_A_C.c,84 :: 		
0x01AC	0x151F      	BSF        ADCON0, 2
;__Lib_ADC_A_C.c,87 :: 		
L_ADC_Read2:
0x01AD	0x1D1F      	BTFSS      ADCON0, 2
0x01AE	0x29B1      	GOTO       L_ADC_Read3
;__Lib_ADC_A_C.c,88 :: 		
0x01AF	0x0000      	NOP
0x01B0	0x29AD      	GOTO       L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_C.c,91 :: 		
0x01B1	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_C.c,94 :: 		
0x01B2	0x081E      	MOVF       ADRESH, 0
0x01B3	0x00F1      	MOVWF      R0+1
0x01B4	0x01F0      	CLRF       R0
0x01B5	0x1683      	BSF        STATUS, 5
0x01B6	0x081E      	MOVF       ADRESL, 0
0x01B7	0x04F0      	IORWF      R0, 1
0x01B8	0x3000      	MOVLW      0
0x01B9	0x04F1      	IORWF      R0+1, 1
;__Lib_ADC_A_C.c,95 :: 		
L_end_ADC_Read:
0x01BA	0x0008      	RETURN
; end of _ADC_Read
_Mul_32x32_FP:
;__Lib_MathDouble.c,610 :: 		
;__Lib_MathDouble.c,622 :: 		
;__Lib_MathDouble.c,624 :: 		
0x01BB	0x1283      	BCF        STATUS, 5
;__Lib_MathDouble.c,625 :: 		
0x01BC	0x1303      	BCF        STATUS, 6
;__Lib_MathDouble.c,627 :: 		
0x01BD	0x01FB      	CLRF       R11
;__Lib_MathDouble.c,628 :: 		
0x01BE	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,629 :: 		
0x01BF	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,630 :: 		
0x01C0	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,631 :: 		
0x01C1	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,632 :: 		
0x01C2	0x2A12      	GOTO       JPMRES032
;__Lib_MathDouble.c,634 :: 		
0x01C3	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,635 :: 		
0x01C4	0x0676      	XORWF      R6, 0
;__Lib_MathDouble.c,636 :: 		
0x01C5	0x00FA      	MOVWF      R10
;__Lib_MathDouble.c,637 :: 		
0x01C6	0x0877      	MOVF       R7, 0
;__Lib_MathDouble.c,638 :: 		
0x01C7	0x07F3      	ADDWF      R3, 1
;__Lib_MathDouble.c,639 :: 		
0x01C8	0x307E      	MOVLW      126
;__Lib_MathDouble.c,640 :: 		
0x01C9	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,641 :: 		
0x01CA	0x29CF      	GOTO       MTUN32
;__Lib_MathDouble.c,642 :: 		
0x01CB	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,643 :: 		
0x01CC	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,644 :: 		
0x01CD	0x2A15      	GOTO       JPMSETFOV32
;__Lib_MathDouble.c,645 :: 		
0x01CE	0x29D2      	GOTO       MOK32
;__Lib_MathDouble.c,646 :: 		
MTUN32:
;__Lib_MathDouble.c,647 :: 		
0x01CF	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,648 :: 		
0x01D0	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,649 :: 		
0x01D1	0x2A18      	GOTO       JPMSETFUN32
;__Lib_MathDouble.c,650 :: 		
MOK32:
;__Lib_MathDouble.c,651 :: 		
0x01D2	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,652 :: 		
0x01D3	0x00F8      	MOVWF      R8
;__Lib_MathDouble.c,653 :: 		
0x01D4	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,654 :: 		
0x01D5	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,655 :: 		
0x01D6	0x0870      	MOVF       R0, 0
;__Lib_MathDouble.c,656 :: 		
0x01D7	0x00FD      	MOVWF      R13
;__Lib_MathDouble.c,657 :: 		
0x01D8	0x17F8      	BSF        R8, 7
;__Lib_MathDouble.c,658 :: 		
0x01D9	0x17F6      	BSF        R6, 7
;__Lib_MathDouble.c,659 :: 		
0x01DA	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,660 :: 		
0x01DB	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,661 :: 		
0x01DC	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,662 :: 		
0x01DD	0x01F0      	CLRF       R0
;__Lib_MathDouble.c,663 :: 		
0x01DE	0x3018      	MOVLW      24
;__Lib_MathDouble.c,664 :: 		
0x01DF	0x00A0      	MOVWF      __math_tempbD
;__Lib_MathDouble.c,665 :: 		
MLOOP32:
;__Lib_MathDouble.c,666 :: 		
0x01E0	0x1C7D      	BTFSS      R13, 0
;__Lib_MathDouble.c,667 :: 		
0x01E1	0x29EC      	GOTO       MNOADD32
;__Lib_MathDouble.c,669 :: 		
0x01E2	0x0874      	MOVF       R4, 0
;__Lib_MathDouble.c,670 :: 		
0x01E3	0x07F0      	ADDWF      R0, 1
;__Lib_MathDouble.c,671 :: 		
0x01E4	0x0875      	MOVF       R5, 0
;__Lib_MathDouble.c,672 :: 		
0x01E5	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,673 :: 		
0x01E6	0x0F75      	INCFSZ     R5, 0
;__Lib_MathDouble.c,674 :: 		
0x01E7	0x07F1      	ADDWF      R1, 1
;__Lib_MathDouble.c,675 :: 		
0x01E8	0x0876      	MOVF       R6, 0
;__Lib_MathDouble.c,676 :: 		
0x01E9	0x1803      	BTFSC      STATUS, 0
;__Lib_MathDouble.c,677 :: 		
0x01EA	0x0F76      	INCFSZ     R6, 0
;__Lib_MathDouble.c,678 :: 		
0x01EB	0x07F2      	ADDWF      R2, 1
;__Lib_MathDouble.c,679 :: 		
MNOADD32:
;__Lib_MathDouble.c,680 :: 		
0x01EC	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,681 :: 		
0x01ED	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.c,682 :: 		
0x01EE	0x0CF0      	RRF        R0, 1
;__Lib_MathDouble.c,683 :: 		
0x01EF	0x0CF8      	RRF        R8, 1
;__Lib_MathDouble.c,684 :: 		
0x01F0	0x0CFC      	RRF        R12, 1
;__Lib_MathDouble.c,685 :: 		
0x01F1	0x0CFD      	RRF        R13, 1
;__Lib_MathDouble.c,686 :: 		
0x01F2	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,687 :: 		
0x01F3	0x0BA0      	DECFSZ     __math_tempbD, 1
;__Lib_MathDouble.c,688 :: 		
0x01F4	0x29E0      	GOTO       MLOOP32
;__Lib_MathDouble.c,689 :: 		
0x01F5	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.c,690 :: 		
0x01F6	0x29FC      	GOTO       MROUND32
;__Lib_MathDouble.c,691 :: 		
0x01F7	0x0DF8      	RLF        R8, 1
;__Lib_MathDouble.c,692 :: 		
0x01F8	0x0DF0      	RLF        R0, 1
;__Lib_MathDouble.c,693 :: 		
0x01F9	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,694 :: 		
0x01FA	0x0DF2      	RLF        R2, 1
;__Lib_MathDouble.c,695 :: 		
0x01FB	0x03F3      	DECF       R3, 1
;__Lib_MathDouble.c,696 :: 		
MROUND32:
;__Lib_MathDouble.c,697 :: 		
0x01FC	0x1B7B      	BTFSC      R11, 6
;__Lib_MathDouble.c,698 :: 		
0x01FD	0x1C70      	BTFSS      R0, 0
;__Lib_MathDouble.c,699 :: 		
0x01FE	0x2A0E      	GOTO       MUL32OK
;__Lib_MathDouble.c,700 :: 		
0x01FF	0x1FF8      	BTFSS      R8, 7
;__Lib_MathDouble.c,701 :: 		
0x0200	0x2A0E      	GOTO       MUL32OK
;__Lib_MathDouble.c,702 :: 		
0x0201	0x0AF0      	INCF       R0, 1
;__Lib_MathDouble.c,703 :: 		
0x0202	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,704 :: 		
0x0203	0x0AF1      	INCF       R1, 1
;__Lib_MathDouble.c,705 :: 		
0x0204	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,706 :: 		
0x0205	0x0AF2      	INCF       R2, 1
;__Lib_MathDouble.c,707 :: 		
0x0206	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,708 :: 		
0x0207	0x2A0E      	GOTO       MUL32OK
;__Lib_MathDouble.c,709 :: 		
0x0208	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,710 :: 		
0x0209	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.c,711 :: 		
0x020A	0x0CF0      	RRF        R0, 1
;__Lib_MathDouble.c,712 :: 		
0x020B	0x0AF3      	INCF       R3, 1
;__Lib_MathDouble.c,713 :: 		
0x020C	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,714 :: 		
0x020D	0x2A15      	GOTO       JPMSETFOV32
;__Lib_MathDouble.c,715 :: 		
MUL32OK:
;__Lib_MathDouble.c,716 :: 		
0x020E	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,717 :: 		
0x020F	0x13F2      	BCF        R2, 7
;__Lib_MathDouble.c,718 :: 		
0x0210	0x3000      	MOVLW      0
;__Lib_MathDouble.c,720 :: 		
0x0211	0x2A1A      	GOTO       MUL32EEE
;__Lib_MathDouble.c,721 :: 		
JPMRES032:
;__Lib_MathDouble.c,722 :: 		
0x0212	0x3001      	MOVLW      1
;__Lib_MathDouble.c,725 :: 		
0x0213	0x20B9      	CALL       _RES032
;__Lib_MathDouble.c,727 :: 		
0x0214	0x2A1A      	GOTO       MUL32EEE
;__Lib_MathDouble.c,728 :: 		
JPMSETFOV32:
;__Lib_MathDouble.c,729 :: 		
0x0215	0x3002      	MOVLW      2
;__Lib_MathDouble.c,732 :: 		
0x0216	0x2156      	CALL       _SETFOV32
;__Lib_MathDouble.c,734 :: 		
0x0217	0x2A1A      	GOTO       MUL32EEE
;__Lib_MathDouble.c,735 :: 		
JPMSETFUN32:
;__Lib_MathDouble.c,736 :: 		
0x0218	0x3004      	MOVLW      4
;__Lib_MathDouble.c,739 :: 		
0x0219	0x20C4      	CALL       _SETFUN32
;__Lib_MathDouble.c,741 :: 		
MUL32EEE:
;__Lib_MathDouble.c,742 :: 		
0x021A	0x0000      	NOP
;__Lib_MathDouble.c,749 :: 		
L_end_Mul_32x32_FP:
0x021B	0x0008      	RETURN
; end of _Mul_32x32_FP
_I2C1_Rd:
;__Lib_I2C_c34.c,85 :: 		
;__Lib_I2C_c34.c,89 :: 		
0x021C	0x1283      	BCF        STATUS, 5
0x021D	0x1303      	BCF        STATUS, 6
0x021E	0x0858      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT, 0
0x021F	0x1683      	BSF        STATUS, 5
0x0220	0x00C7      	MOVWF      I2C1_Rd_timeout_L0
0x0221	0x1283      	BCF        STATUS, 5
0x0222	0x0859      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+1, 0
0x0223	0x1683      	BSF        STATUS, 5
0x0224	0x00C8      	MOVWF      I2C1_Rd_timeout_L0+1
0x0225	0x1283      	BCF        STATUS, 5
0x0226	0x085A      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+2, 0
0x0227	0x1683      	BSF        STATUS, 5
0x0228	0x00C9      	MOVWF      I2C1_Rd_timeout_L0+2
0x0229	0x1283      	BCF        STATUS, 5
0x022A	0x085B      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+3, 0
0x022B	0x1683      	BSF        STATUS, 5
0x022C	0x00CA      	MOVWF      I2C1_Rd_timeout_L0+3
;__Lib_I2C_c34.c,91 :: 		
0x022D	0x1283      	BCF        STATUS, 5
0x022E	0x118C      	BCF        PIR1, 3
;__Lib_I2C_c34.c,92 :: 		
0x022F	0x1683      	BSF        STATUS, 5
0x0230	0x1591      	BSF        SSPCON2, 3
;__Lib_I2C_c34.c,94 :: 		
L_I2C1_Rd16:
0x0231	0x1283      	BCF        STATUS, 5
0x0232	0x198C      	BTFSC      PIR1, 3
0x0233	0x2A59      	GOTO       L_I2C1_Rd17
;__Lib_I2C_c34.c,97 :: 		
0x0234	0x0858      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT, 0
0x0235	0x0459      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+1, 0
0x0236	0x045A      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+2, 0
0x0237	0x045B      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+3, 0
0x0238	0x1903      	BTFSC      STATUS, 2
0x0239	0x2A58      	GOTO       L_I2C1_Rd18
;__Lib_I2C_c34.c,99 :: 		
0x023A	0x1683      	BSF        STATUS, 5
0x023B	0x0847      	MOVF       I2C1_Rd_timeout_L0, 0
0x023C	0x0448      	IORWF      I2C1_Rd_timeout_L0+1, 0
0x023D	0x0449      	IORWF      I2C1_Rd_timeout_L0+2, 0
0x023E	0x044A      	IORWF      I2C1_Rd_timeout_L0+3, 0
0x023F	0x1D03      	BTFSS      STATUS, 2
0x0240	0x2A4E      	GOTO       L_I2C1_Rd19
;__Lib_I2C_c34.c,101 :: 		
0x0241	0x082C      	MOVF       _I2C1_Timeout_Ptr+2, 0
0x0242	0x0084      	MOVWF      FSR
0x0243	0x3003      	MOVLW      3
0x0244	0x0080      	MOVWF      INDF
0x0245	0x0A84      	INCF       FSR, 1
0x0246	0x082A      	MOVF       _I2C1_Timeout_Ptr, 0
0x0247	0x00BF      	MOVWF      ___DoICPAddr
0x0248	0x082B      	MOVF       _I2C1_Timeout_Ptr+1, 0
0x0249	0x00C0      	MOVWF      ___DoICPAddr+1
0x024A	0x20D0      	CALL       _____DoIFC
0x024B	0x118A      	BCF        PCLATH, 3
0x024C	0x120A      	BCF        PCLATH, 4
;__Lib_I2C_c34.c,102 :: 		
0x024D	0x2A59      	GOTO       L_I2C1_Rd17
;__Lib_I2C_c34.c,103 :: 		
L_I2C1_Rd19:
;__Lib_I2C_c34.c,104 :: 		
0x024E	0x3001      	MOVLW      1
0x024F	0x1683      	BSF        STATUS, 5
0x0250	0x1303      	BCF        STATUS, 6
0x0251	0x02C7      	SUBWF      I2C1_Rd_timeout_L0, 1
0x0252	0x1C03      	BTFSS      STATUS, 0
0x0253	0x02C8      	SUBWF      I2C1_Rd_timeout_L0+1, 1
0x0254	0x1C03      	BTFSS      STATUS, 0
0x0255	0x02C9      	SUBWF      I2C1_Rd_timeout_L0+2, 1
0x0256	0x1C03      	BTFSS      STATUS, 0
0x0257	0x02CA      	SUBWF      I2C1_Rd_timeout_L0+3, 1
;__Lib_I2C_c34.c,105 :: 		
L_I2C1_Rd18:
;__Lib_I2C_c34.c,106 :: 		
0x0258	0x2A31      	GOTO       L_I2C1_Rd16
L_I2C1_Rd17:
0x0259	0x1303      	BCF        STATUS, 6
;__Lib_I2C_c34.c,108 :: 		
0x025A	0x1283      	BCF        STATUS, 5
0x025B	0x0813      	MOVF       SSPBUF, 0
0x025C	0x1683      	BSF        STATUS, 5
0x025D	0x00C6      	MOVWF      I2C1_Rd_tmp_L0
;__Lib_I2C_c34.c,109 :: 		
0x025E	0x1283      	BCF        STATUS, 5
0x025F	0x0828      	MOVF       FARG_I2C1_Rd_ack, 0
0x0260	0x3A00      	XORLW      0
0x0261	0x1D03      	BTFSS      STATUS, 2
0x0262	0x2A66      	GOTO       L_I2C1_Rd20
;__Lib_I2C_c34.c,110 :: 		
0x0263	0x1683      	BSF        STATUS, 5
0x0264	0x1691      	BSF        SSPCON2, 5
0x0265	0x2A68      	GOTO       L_I2C1_Rd21
L_I2C1_Rd20:
0x0266	0x1683      	BSF        STATUS, 5
;__Lib_I2C_c34.c,112 :: 		
0x0267	0x1291      	BCF        SSPCON2, 5
L_I2C1_Rd21:
;__Lib_I2C_c34.c,114 :: 		
0x0268	0x1283      	BCF        STATUS, 5
0x0269	0x118C      	BCF        PIR1, 3
;__Lib_I2C_c34.c,115 :: 		
0x026A	0x1683      	BSF        STATUS, 5
0x026B	0x1611      	BSF        SSPCON2, 4
;__Lib_I2C_c34.c,118 :: 		
0x026C	0x1283      	BCF        STATUS, 5
0x026D	0x0858      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT, 0
0x026E	0x1683      	BSF        STATUS, 5
0x026F	0x00C7      	MOVWF      I2C1_Rd_timeout_L0
0x0270	0x1283      	BCF        STATUS, 5
0x0271	0x0859      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+1, 0
0x0272	0x1683      	BSF        STATUS, 5
0x0273	0x00C8      	MOVWF      I2C1_Rd_timeout_L0+1
0x0274	0x1283      	BCF        STATUS, 5
0x0275	0x085A      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+2, 0
0x0276	0x1683      	BSF        STATUS, 5
0x0277	0x00C9      	MOVWF      I2C1_Rd_timeout_L0+2
0x0278	0x1283      	BCF        STATUS, 5
0x0279	0x085B      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+3, 0
0x027A	0x1683      	BSF        STATUS, 5
0x027B	0x00CA      	MOVWF      I2C1_Rd_timeout_L0+3
;__Lib_I2C_c34.c,120 :: 		
L_I2C1_Rd22:
0x027C	0x1283      	BCF        STATUS, 5
0x027D	0x198C      	BTFSC      PIR1, 3
0x027E	0x2AA4      	GOTO       L_I2C1_Rd23
;__Lib_I2C_c34.c,123 :: 		
0x027F	0x0858      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT, 0
0x0280	0x0459      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+1, 0
0x0281	0x045A      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+2, 0
0x0282	0x045B      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+3, 0
0x0283	0x1903      	BTFSC      STATUS, 2
0x0284	0x2AA3      	GOTO       L_I2C1_Rd24
;__Lib_I2C_c34.c,125 :: 		
0x0285	0x1683      	BSF        STATUS, 5
0x0286	0x0847      	MOVF       I2C1_Rd_timeout_L0, 0
0x0287	0x0448      	IORWF      I2C1_Rd_timeout_L0+1, 0
0x0288	0x0449      	IORWF      I2C1_Rd_timeout_L0+2, 0
0x0289	0x044A      	IORWF      I2C1_Rd_timeout_L0+3, 0
0x028A	0x1D03      	BTFSS      STATUS, 2
0x028B	0x2A99      	GOTO       L_I2C1_Rd25
;__Lib_I2C_c34.c,127 :: 		
0x028C	0x082C      	MOVF       _I2C1_Timeout_Ptr+2, 0
0x028D	0x0084      	MOVWF      FSR
0x028E	0x3003      	MOVLW      3
0x028F	0x0080      	MOVWF      INDF
0x0290	0x0A84      	INCF       FSR, 1
0x0291	0x082A      	MOVF       _I2C1_Timeout_Ptr, 0
0x0292	0x00BF      	MOVWF      ___DoICPAddr
0x0293	0x082B      	MOVF       _I2C1_Timeout_Ptr+1, 0
0x0294	0x00C0      	MOVWF      ___DoICPAddr+1
0x0295	0x20D0      	CALL       _____DoIFC
0x0296	0x118A      	BCF        PCLATH, 3
0x0297	0x120A      	BCF        PCLATH, 4
;__Lib_I2C_c34.c,128 :: 		
0x0298	0x2AA4      	GOTO       L_I2C1_Rd23
;__Lib_I2C_c34.c,129 :: 		
L_I2C1_Rd25:
;__Lib_I2C_c34.c,130 :: 		
0x0299	0x3001      	MOVLW      1
0x029A	0x1683      	BSF        STATUS, 5
0x029B	0x1303      	BCF        STATUS, 6
0x029C	0x02C7      	SUBWF      I2C1_Rd_timeout_L0, 1
0x029D	0x1C03      	BTFSS      STATUS, 0
0x029E	0x02C8      	SUBWF      I2C1_Rd_timeout_L0+1, 1
0x029F	0x1C03      	BTFSS      STATUS, 0
0x02A0	0x02C9      	SUBWF      I2C1_Rd_timeout_L0+2, 1
0x02A1	0x1C03      	BTFSS      STATUS, 0
0x02A2	0x02CA      	SUBWF      I2C1_Rd_timeout_L0+3, 1
;__Lib_I2C_c34.c,131 :: 		
L_I2C1_Rd24:
;__Lib_I2C_c34.c,132 :: 		
0x02A3	0x2A7C      	GOTO       L_I2C1_Rd22
L_I2C1_Rd23:
0x02A4	0x1683      	BSF        STATUS, 5
0x02A5	0x1303      	BCF        STATUS, 6
;__Lib_I2C_c34.c,134 :: 		
0x02A6	0x0846      	MOVF       I2C1_Rd_tmp_L0, 0
0x02A7	0x00F0      	MOVWF      R0
;__Lib_I2C_c34.c,135 :: 		
L_end_I2C1_Rd:
0x02A8	0x0008      	RETURN
; end of _I2C1_Rd
_Div_16x16_S:
;__Lib_Math.c,480 :: 		
;__Lib_Math.c,488 :: 		
0x02A9	0x1283      	BCF        STATUS, 5
0x02AA	0x1303      	BCF        STATUS, 6
0x02AB	0x0874      	MOVF       R4, 0
0x02AC	0x3A00      	XORLW      0
0x02AD	0x1D03      	BTFSS      STATUS, 2
0x02AE	0x2AB8      	GOTO       L_Div_16x16_S0
;__Lib_Math.c,489 :: 		
0x02AF	0x0875      	MOVF       R5, 0
0x02B0	0x3A00      	XORLW      0
0x02B1	0x1D03      	BTFSS      STATUS, 2
0x02B2	0x2AB8      	GOTO       L_Div_16x16_S1
;__Lib_Math.c,490 :: 		
0x02B3	0x30FF      	MOVLW      255
0x02B4	0x00F0      	MOVWF      R0
;__Lib_Math.c,491 :: 		
0x02B5	0x307F      	MOVLW      127
0x02B6	0x00F1      	MOVWF      R1
;__Lib_Math.c,492 :: 		
0x02B7	0x2B11      	GOTO       L_end_Div_16x16_S
;__Lib_Math.c,493 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,496 :: 		
0x02B8	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,497 :: 		
0x02B9	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,498 :: 		
0x02BA	0x01FD      	CLRF       R13
;__Lib_Math.c,499 :: 		
0x02BB	0x01F9      	CLRF       R9
;__Lib_Math.c,500 :: 		
0x02BC	0x01F8      	CLRF       R8
;__Lib_Math.c,501 :: 		
0x02BD	0x0871      	MOVF       R1, 0
;__Lib_Math.c,502 :: 		
0x02BE	0x0470      	IORWF      R0, 0
;__Lib_Math.c,503 :: 		
0x02BF	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,504 :: 		
0x02C0	0x3400      	RETLW      0
;__Lib_Math.c,506 :: 		
0x02C1	0x0871      	MOVF       R1, 0
;__Lib_Math.c,507 :: 		
0x02C2	0x0675      	XORWF      R5, 0
;__Lib_Math.c,508 :: 		
0x02C3	0x00FA      	MOVWF      R10
;__Lib_Math.c,509 :: 		
0x02C4	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,510 :: 		
0x02C5	0x09FD      	COMF       R13, 1
;__Lib_Math.c,512 :: 		
0x02C6	0x01FB      	CLRF       R11
;__Lib_Math.c,514 :: 		
0x02C7	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,515 :: 		
0x02C8	0x2ACE      	GOTO       $+6
;__Lib_Math.c,517 :: 		
0x02C9	0x09F4      	COMF       R4, 1
;__Lib_Math.c,518 :: 		
0x02CA	0x09F5      	COMF       R5, 1
;__Lib_Math.c,519 :: 		
0x02CB	0x0AF4      	INCF       R4, 1
;__Lib_Math.c,520 :: 		
0x02CC	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,521 :: 		
0x02CD	0x0AF5      	INCF       R5, 1
;__Lib_Math.c,523 :: 		
0x02CE	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,524 :: 		
0x02CF	0x2AD5      	GOTO       $+6
;__Lib_Math.c,526 :: 		
0x02D0	0x09F0      	COMF       R0, 1
;__Lib_Math.c,527 :: 		
0x02D1	0x09F1      	COMF       R1, 1
;__Lib_Math.c,528 :: 		
0x02D2	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,529 :: 		
0x02D3	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,530 :: 		
0x02D4	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,532 :: 		
0x02D5	0x0871      	MOVF       R1, 0
;__Lib_Math.c,533 :: 		
0x02D6	0x0475      	IORWF      R5, 0
;__Lib_Math.c,534 :: 		
0x02D7	0x00FA      	MOVWF      R10
;__Lib_Math.c,535 :: 		
0x02D8	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,536 :: 		
0x02D9	0x2AEA      	GOTO       $+17
;__Lib_Math.c,538 :: 		
0x02DA	0x20EE      	CALL       _Div_16x16_S_L
;__Lib_Math.c,540 :: 		
0x02DB	0x187B      	BTFSC      R11, 0
;__Lib_Math.c,541 :: 		
0x02DC	0x2AFD      	GOTO       $+33
;__Lib_Math.c,543 :: 		
0x02DD	0x1FFD      	BTFSS      R13, 7
;__Lib_Math.c,544 :: 		
0x02DE	0x3400      	RETLW      0
;__Lib_Math.c,546 :: 		
0x02DF	0x09F0      	COMF       R0, 1
;__Lib_Math.c,547 :: 		
0x02E0	0x09F1      	COMF       R1, 1
;__Lib_Math.c,548 :: 		
0x02E1	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,549 :: 		
0x02E2	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,550 :: 		
0x02E3	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,552 :: 		
0x02E4	0x09F8      	COMF       R8, 1
;__Lib_Math.c,553 :: 		
0x02E5	0x09F9      	COMF       R9, 1
;__Lib_Math.c,554 :: 		
0x02E6	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,555 :: 		
0x02E7	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,556 :: 		
0x02E8	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,558 :: 		
0x02E9	0x3400      	RETLW      0
;__Lib_Math.c,560 :: 		
0x02EA	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,561 :: 		
0x02EB	0x2AF9      	GOTO       $+14
;__Lib_Math.c,562 :: 		
0x02EC	0x1BF1      	BTFSC      R1, 7
;__Lib_Math.c,563 :: 		
0x02ED	0x2AF5      	GOTO       $+8
;__Lib_Math.c,564 :: 		
0x02EE	0x0871      	MOVF       R1, 0
;__Lib_Math.c,565 :: 		
0x02EF	0x00F9      	MOVWF      R9
;__Lib_Math.c,566 :: 		
0x02F0	0x0870      	MOVF       R0, 0
;__Lib_Math.c,567 :: 		
0x02F1	0x00F8      	MOVWF      R8
;__Lib_Math.c,568 :: 		
0x02F2	0x01F1      	CLRF       R1
;__Lib_Math.c,569 :: 		
0x02F3	0x01F0      	CLRF       R0
;__Lib_Math.c,570 :: 		
0x02F4	0x2ADD      	GOTO       $-23
;__Lib_Math.c,571 :: 		
0x02F5	0x01F1      	CLRF       R1
;__Lib_Math.c,572 :: 		
0x02F6	0x01F0      	CLRF       R0
;__Lib_Math.c,573 :: 		
0x02F7	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,574 :: 		
0x02F8	0x3400      	RETLW      0
;__Lib_Math.c,576 :: 		
0x02F9	0x09F1      	COMF       R1, 1
;__Lib_Math.c,577 :: 		
0x02FA	0x09F0      	COMF       R0, 1
;__Lib_Math.c,578 :: 		
0x02FB	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,579 :: 		
0x02FC	0x2ADA      	GOTO       $-34
;__Lib_Math.c,581 :: 		
0x02FD	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,582 :: 		
0x02FE	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,583 :: 		
0x02FF	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,584 :: 		
0x0300	0x0874      	MOVF       R4, 0
;__Lib_Math.c,585 :: 		
0x0301	0x0278      	SUBWF      R8, 0
;__Lib_Math.c,586 :: 		
0x0302	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,587 :: 		
0x0303	0x2ADD      	GOTO       $-38
;__Lib_Math.c,588 :: 		
0x0304	0x0875      	MOVF       R5, 0
;__Lib_Math.c,589 :: 		
0x0305	0x0279      	SUBWF      R9, 0
;__Lib_Math.c,590 :: 		
0x0306	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,591 :: 		
0x0307	0x2ADD      	GOTO       $-42
;__Lib_Math.c,592 :: 		
0x0308	0x01F9      	CLRF       R9
;__Lib_Math.c,593 :: 		
0x0309	0x01F8      	CLRF       R8
;__Lib_Math.c,594 :: 		
0x030A	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,595 :: 		
0x030B	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,596 :: 		
0x030C	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,597 :: 		
0x030D	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,598 :: 		
0x030E	0x2ADD      	GOTO       $-49
;__Lib_Math.c,599 :: 		
0x030F	0x0000      	NOP
;__Lib_Math.c,600 :: 		
0x0310	0x34FF      	RETLW      255
;__Lib_Math.c,602 :: 		
L_end_Div_16x16_S:
0x0311	0x0008      	RETURN
; end of _Div_16x16_S
_double2int:
;__Lib_MathDouble.c,1391 :: 		
;__Lib_MathDouble.c,1399 :: 		
0x0312	0x1283      	BCF        STATUS, 5
;__Lib_MathDouble.c,1400 :: 		
0x0313	0x1303      	BCF        STATUS, 6
;__Lib_MathDouble.c,1402 :: 		
0x0314	0x01FB      	CLRF       R11
;__Lib_MathDouble.c,1403 :: 		
0x0315	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,1404 :: 		
0x0316	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1405 :: 		
0x0317	0x2B4F      	GOTO       IRES016
;__Lib_MathDouble.c,1407 :: 		
0x0318	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,1408 :: 		
0x0319	0x00FA      	MOVWF      R10
;__Lib_MathDouble.c,1409 :: 		
0x031A	0x17F2      	BSF        R2, 7
;__Lib_MathDouble.c,1411 :: 		
0x031B	0x308E      	MOVLW      142
;__Lib_MathDouble.c,1412 :: 		
0x031C	0x02F3      	SUBWF      R3, 1
;__Lib_MathDouble.c,1413 :: 		
0x031D	0x1FF3      	BTFSS      R3, 7
;__Lib_MathDouble.c,1414 :: 		
0x031E	0x2B52      	GOTO       SETIOV16
;__Lib_MathDouble.c,1415 :: 		
0x031F	0x09F3      	COMF       R3, 1
;__Lib_MathDouble.c,1416 :: 		
0x0320	0x0AF3      	INCF       R3, 1
;__Lib_MathDouble.c,1418 :: 		
0x0321	0x3008      	MOVLW      8
;__Lib_MathDouble.c,1419 :: 		
0x0322	0x0273      	SUBWF      R3, 0
;__Lib_MathDouble.c,1420 :: 		
0x0323	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,1421 :: 		
0x0324	0x2B35      	GOTO       TSHIFT3216
;__Lib_MathDouble.c,1422 :: 		
0x0325	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,1423 :: 		
0x0326	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,1424 :: 		
0x0327	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,1425 :: 		
0x0328	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1426 :: 		
0x0329	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1428 :: 		
0x032A	0x3008      	MOVLW      8
;__Lib_MathDouble.c,1429 :: 		
0x032B	0x0273      	SUBWF      R3, 0
;__Lib_MathDouble.c,1430 :: 		
0x032C	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,1431 :: 		
0x032D	0x2B35      	GOTO       TSHIFT3216
;__Lib_MathDouble.c,1432 :: 		
0x032E	0x00F3      	MOVWF      R3
;__Lib_MathDouble.c,1433 :: 		
0x032F	0x0DF1      	RLF        R1, 1
;__Lib_MathDouble.c,1434 :: 		
0x0330	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,1436 :: 		
0x0331	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,1437 :: 		
0x0332	0x1D03      	BTFSS      STATUS, 2
;__Lib_MathDouble.c,1438 :: 		
0x0333	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,1439 :: 		
0x0334	0x2B3D      	GOTO       SHIFT3216OK
;__Lib_MathDouble.c,1440 :: 		
TSHIFT3216:
;__Lib_MathDouble.c,1441 :: 		
0x0335	0x0873      	MOVF       R3, 0
;__Lib_MathDouble.c,1442 :: 		
0x0336	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1443 :: 		
0x0337	0x2B3D      	GOTO       SHIFT3216OK
;__Lib_MathDouble.c,1444 :: 		
SHIFT3216:
;__Lib_MathDouble.c,1445 :: 		
0x0338	0x1003      	BCF        STATUS, 0
;__Lib_MathDouble.c,1446 :: 		
0x0339	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,1447 :: 		
0x033A	0x0CF1      	RRF        R1, 1
;__Lib_MathDouble.c,1448 :: 		
0x033B	0x0BF3      	DECFSZ     R3, 1
;__Lib_MathDouble.c,1449 :: 		
0x033C	0x2B38      	GOTO       SHIFT3216
;__Lib_MathDouble.c,1450 :: 		
SHIFT3216OK:
;__Lib_MathDouble.c,1451 :: 		
0x033D	0x1B7B      	BTFSC      R11, 6
;__Lib_MathDouble.c,1452 :: 		
0x033E	0x1C71      	BTFSS      R1, 0
;__Lib_MathDouble.c,1453 :: 		
0x033F	0x2B47      	GOTO       INT3216OK
;__Lib_MathDouble.c,1454 :: 		
0x0340	0x1C03      	BTFSS      STATUS, 0
;__Lib_MathDouble.c,1455 :: 		
0x0341	0x2B47      	GOTO       INT3216OK
;__Lib_MathDouble.c,1456 :: 		
0x0342	0x0AF1      	INCF       R1, 1
;__Lib_MathDouble.c,1457 :: 		
0x0343	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1458 :: 		
0x0344	0x0AF2      	INCF       R2, 1
;__Lib_MathDouble.c,1459 :: 		
0x0345	0x1BF2      	BTFSC      R2, 7
;__Lib_MathDouble.c,1460 :: 		
0x0346	0x2B5E      	GOTO       JPJSETIOV3224
;__Lib_MathDouble.c,1461 :: 		
INT3216OK:
;__Lib_MathDouble.c,1462 :: 		
0x0347	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,1463 :: 		
0x0348	0x2B61      	GOTO       INT3216EOK
;__Lib_MathDouble.c,1465 :: 		
0x0349	0x09F2      	COMF       R2, 1
;__Lib_MathDouble.c,1466 :: 		
0x034A	0x09F1      	COMF       R1, 1
;__Lib_MathDouble.c,1467 :: 		
0x034B	0x0AF1      	INCF       R1, 1
;__Lib_MathDouble.c,1468 :: 		
0x034C	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1469 :: 		
0x034D	0x0AF2      	INCF       R2, 1
;__Lib_MathDouble.c,1470 :: 		
0x034E	0x2B61      	GOTO       INT3216EOK
;__Lib_MathDouble.c,1472 :: 		
IRES016:
;__Lib_MathDouble.c,1473 :: 		
0x034F	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1474 :: 		
0x0350	0x01F1      	CLRF       R1
;__Lib_MathDouble.c,1475 :: 		
0x0351	0x2B61      	GOTO       INT3216EOK
;__Lib_MathDouble.c,1476 :: 		
SETIOV16:
;__Lib_MathDouble.c,1477 :: 		
0x0352	0x147B      	BSF        R11, 0
;__Lib_MathDouble.c,1478 :: 		
0x0353	0x1FFB      	BTFSS      R11, 7
;__Lib_MathDouble.c,1479 :: 		
0x0354	0x2B64      	GOTO       INT3216EER
;__Lib_MathDouble.c,1481 :: 		
0x0355	0x01F2      	CLRF       R2
;__Lib_MathDouble.c,1482 :: 		
0x0356	0x1FFA      	BTFSS      R10, 7
;__Lib_MathDouble.c,1483 :: 		
0x0357	0x2B64      	GOTO       INT3216EER
;__Lib_MathDouble.c,1484 :: 		
0x0358	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,1485 :: 		
0x0359	0x00F2      	MOVWF      R2
;__Lib_MathDouble.c,1486 :: 		
0x035A	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1487 :: 		
0x035B	0x0DFA      	RLF        R10, 1
;__Lib_MathDouble.c,1488 :: 		
0x035C	0x0CF2      	RRF        R2, 1
;__Lib_MathDouble.c,1489 :: 		
0x035D	0x2B64      	GOTO       INT3216EER
;__Lib_MathDouble.c,1491 :: 		
JPJSETIOV3224:
;__Lib_MathDouble.c,1492 :: 		
0x035E	0x3001      	MOVLW      1
;__Lib_MathDouble.c,1493 :: 		
0x035F	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,1494 :: 		
0x0360	0x2B66      	GOTO       INT3216EEE
;__Lib_MathDouble.c,1495 :: 		
INT3216EOK:
;__Lib_MathDouble.c,1496 :: 		
0x0361	0x3000      	MOVLW      0
;__Lib_MathDouble.c,1497 :: 		
0x0362	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,1498 :: 		
0x0363	0x2B66      	GOTO       INT3216EEE
;__Lib_MathDouble.c,1499 :: 		
INT3216EER:
;__Lib_MathDouble.c,1500 :: 		
0x0364	0x30FF      	MOVLW      255
;__Lib_MathDouble.c,1501 :: 		
0x0365	0x00FC      	MOVWF      R12
;__Lib_MathDouble.c,1502 :: 		
INT3216EEE:
;__Lib_MathDouble.c,1505 :: 		
0x0366	0x08FC      	MOVF       R12, 1
;__Lib_MathDouble.c,1507 :: 		
0x0367	0x1903      	BTFSC      STATUS, 2
;__Lib_MathDouble.c,1508 :: 		
0x0368	0x2B6A      	GOTO       L_Double2Int_0
;__Lib_MathDouble.c,1510 :: 		
0x0369	0x2149      	CALL       _SETIOV3224
;__Lib_MathDouble.c,1512 :: 		
L_Double2Int_0:
;__Lib_MathDouble.c,1513 :: 		
0x036A	0x0871      	MOVF       R1, 0
;__Lib_MathDouble.c,1514 :: 		
0x036B	0x00F0      	MOVWF      R0
;__Lib_MathDouble.c,1515 :: 		
0x036C	0x0872      	MOVF       R2, 0
;__Lib_MathDouble.c,1516 :: 		
0x036D	0x00F1      	MOVWF      R1
;__Lib_MathDouble.c,1520 :: 		
L_end_double2int:
0x036E	0x0008      	RETURN
; end of _double2int
_TempStartRead:
;Temprature.c,21 :: 		void TempStartRead(void){
;Temprature.c,22 :: 		TempTimeCounter++;                            // Increasing the temprature time counter value
0x036F	0x1283      	BCF        STATUS, 5
0x0370	0x1303      	BCF        STATUS, 6
0x0371	0x0ADE      	INCF       _TempTimeCounter, 1
0x0372	0x1903      	BTFSC      STATUS, 2
0x0373	0x0ADF      	INCF       _TempTimeCounter+1, 1
;Temprature.c,23 :: 		if(TempTimeCounter==TEMP_COUNTER_MAX_VALUE){  // Checking if the temprature time counter value has reached the maximum value needed to start the temprature reading operation
0x0374	0x3000      	MOVLW      0
0x0375	0x065F      	XORWF      _TempTimeCounter+1, 0
0x0376	0x1D03      	BTFSS      STATUS, 2
0x0377	0x2B7A      	GOTO       L__TempStartRead8
0x0378	0x300A      	MOVLW      10
0x0379	0x065E      	XORWF      _TempTimeCounter, 0
L__TempStartRead8:
0x037A	0x1D03      	BTFSS      STATUS, 2
0x037B	0x2B80      	GOTO       L_TempStartRead0
;Temprature.c,24 :: 		TempTimeCounter = 0;                        // Resettig  the temprature time counter value to 0
0x037C	0x01DE      	CLRF       _TempTimeCounter
0x037D	0x01DF      	CLRF       _TempTimeCounter+1
;Temprature.c,25 :: 		TempReadFlag = TEMP_READ;                   // Changing the temprature read flag value to start reading state
0x037E	0x01D2      	CLRF       _TempReadFlag
;Temprature.c,26 :: 		}else{
0x037F	0x2B80      	GOTO       L_TempStartRead1
L_TempStartRead0:
;Temprature.c,28 :: 		}
L_TempStartRead1:
;Temprature.c,29 :: 		}
L_end_TempStartRead:
0x0380	0x0008      	RETURN
; end of _TempStartRead
_I2C1_Wr:
;__Lib_I2C_c34.c,137 :: 		
;__Lib_I2C_c34.c,140 :: 		
0x0381	0x1283      	BCF        STATUS, 5
0x0382	0x1303      	BCF        STATUS, 6
0x0383	0x118C      	BCF        PIR1, 3
;__Lib_I2C_c34.c,141 :: 		
0x0384	0x0827      	MOVF       FARG_I2C1_Wr_data_, 0
0x0385	0x0093      	MOVWF      SSPBUF
;__Lib_I2C_c34.c,143 :: 		
0x0386	0x0858      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT, 0
0x0387	0x1683      	BSF        STATUS, 5
0x0388	0x00C6      	MOVWF      I2C1_Wr_timeout_L0
0x0389	0x1283      	BCF        STATUS, 5
0x038A	0x0859      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+1, 0
0x038B	0x1683      	BSF        STATUS, 5
0x038C	0x00C7      	MOVWF      I2C1_Wr_timeout_L0+1
0x038D	0x1283      	BCF        STATUS, 5
0x038E	0x085A      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+2, 0
0x038F	0x1683      	BSF        STATUS, 5
0x0390	0x00C8      	MOVWF      I2C1_Wr_timeout_L0+2
0x0391	0x1283      	BCF        STATUS, 5
0x0392	0x085B      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+3, 0
0x0393	0x1683      	BSF        STATUS, 5
0x0394	0x00C9      	MOVWF      I2C1_Wr_timeout_L0+3
;__Lib_I2C_c34.c,145 :: 		
L_I2C1_Wr26:
0x0395	0x1683      	BSF        STATUS, 5
0x0396	0x1D14      	BTFSS      SSPSTAT, 2
0x0397	0x2BC1      	GOTO       L_I2C1_Wr27
;__Lib_I2C_c34.c,148 :: 		
0x0398	0x1283      	BCF        STATUS, 5
0x0399	0x0858      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT, 0
0x039A	0x0459      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+1, 0
0x039B	0x045A      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+2, 0
0x039C	0x045B      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+3, 0
0x039D	0x1903      	BTFSC      STATUS, 2
0x039E	0x2BC0      	GOTO       L_I2C1_Wr28
;__Lib_I2C_c34.c,150 :: 		
0x039F	0x1683      	BSF        STATUS, 5
0x03A0	0x0846      	MOVF       I2C1_Wr_timeout_L0, 0
0x03A1	0x0447      	IORWF      I2C1_Wr_timeout_L0+1, 0
0x03A2	0x0448      	IORWF      I2C1_Wr_timeout_L0+2, 0
0x03A3	0x0449      	IORWF      I2C1_Wr_timeout_L0+3, 0
0x03A4	0x1D03      	BTFSS      STATUS, 2
0x03A5	0x2BB7      	GOTO       L_I2C1_Wr29
;__Lib_I2C_c34.c,152 :: 		
0x03A6	0x082C      	MOVF       _I2C1_Timeout_Ptr+2, 0
0x03A7	0x0084      	MOVWF      FSR
0x03A8	0x3004      	MOVLW      4
0x03A9	0x0080      	MOVWF      INDF
0x03AA	0x0A84      	INCF       FSR, 1
0x03AB	0x082A      	MOVF       _I2C1_Timeout_Ptr, 0
0x03AC	0x00BF      	MOVWF      ___DoICPAddr
0x03AD	0x082B      	MOVF       _I2C1_Timeout_Ptr+1, 0
0x03AE	0x00C0      	MOVWF      ___DoICPAddr+1
0x03AF	0x20D0      	CALL       _____DoIFC
0x03B0	0x118A      	BCF        PCLATH, 3
0x03B1	0x120A      	BCF        PCLATH, 4
;__Lib_I2C_c34.c,153 :: 		
0x03B2	0x3001      	MOVLW      1
0x03B3	0x1283      	BCF        STATUS, 5
0x03B4	0x1303      	BCF        STATUS, 6
0x03B5	0x00F0      	MOVWF      R0
0x03B6	0x2C04      	GOTO       L_end_I2C1_Wr
;__Lib_I2C_c34.c,154 :: 		
L_I2C1_Wr29:
;__Lib_I2C_c34.c,155 :: 		
0x03B7	0x3001      	MOVLW      1
0x03B8	0x1683      	BSF        STATUS, 5
0x03B9	0x02C6      	SUBWF      I2C1_Wr_timeout_L0, 1
0x03BA	0x1C03      	BTFSS      STATUS, 0
0x03BB	0x02C7      	SUBWF      I2C1_Wr_timeout_L0+1, 1
0x03BC	0x1C03      	BTFSS      STATUS, 0
0x03BD	0x02C8      	SUBWF      I2C1_Wr_timeout_L0+2, 1
0x03BE	0x1C03      	BTFSS      STATUS, 0
0x03BF	0x02C9      	SUBWF      I2C1_Wr_timeout_L0+3, 1
;__Lib_I2C_c34.c,156 :: 		
L_I2C1_Wr28:
;__Lib_I2C_c34.c,157 :: 		
0x03C0	0x2B95      	GOTO       L_I2C1_Wr26
L_I2C1_Wr27:
;__Lib_I2C_c34.c,159 :: 		
0x03C1	0x1283      	BCF        STATUS, 5
0x03C2	0x0858      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT, 0
0x03C3	0x1683      	BSF        STATUS, 5
0x03C4	0x00C6      	MOVWF      I2C1_Wr_timeout_L0
0x03C5	0x1283      	BCF        STATUS, 5
0x03C6	0x0859      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+1, 0
0x03C7	0x1683      	BSF        STATUS, 5
0x03C8	0x00C7      	MOVWF      I2C1_Wr_timeout_L0+1
0x03C9	0x1283      	BCF        STATUS, 5
0x03CA	0x085A      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+2, 0
0x03CB	0x1683      	BSF        STATUS, 5
0x03CC	0x00C8      	MOVWF      I2C1_Wr_timeout_L0+2
0x03CD	0x1283      	BCF        STATUS, 5
0x03CE	0x085B      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+3, 0
0x03CF	0x1683      	BSF        STATUS, 5
0x03D0	0x00C9      	MOVWF      I2C1_Wr_timeout_L0+3
;__Lib_I2C_c34.c,161 :: 		
L_I2C1_Wr30:
0x03D1	0x1283      	BCF        STATUS, 5
0x03D2	0x198C      	BTFSC      PIR1, 3
0x03D3	0x2BFC      	GOTO       L_I2C1_Wr31
;__Lib_I2C_c34.c,164 :: 		
0x03D4	0x0858      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT, 0
0x03D5	0x0459      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+1, 0
0x03D6	0x045A      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+2, 0
0x03D7	0x045B      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+3, 0
0x03D8	0x1903      	BTFSC      STATUS, 2
0x03D9	0x2BFB      	GOTO       L_I2C1_Wr32
;__Lib_I2C_c34.c,166 :: 		
0x03DA	0x1683      	BSF        STATUS, 5
0x03DB	0x0846      	MOVF       I2C1_Wr_timeout_L0, 0
0x03DC	0x0447      	IORWF      I2C1_Wr_timeout_L0+1, 0
0x03DD	0x0448      	IORWF      I2C1_Wr_timeout_L0+2, 0
0x03DE	0x0449      	IORWF      I2C1_Wr_timeout_L0+3, 0
0x03DF	0x1D03      	BTFSS      STATUS, 2
0x03E0	0x2BF2      	GOTO       L_I2C1_Wr33
;__Lib_I2C_c34.c,168 :: 		
0x03E1	0x082C      	MOVF       _I2C1_Timeout_Ptr+2, 0
0x03E2	0x0084      	MOVWF      FSR
0x03E3	0x3004      	MOVLW      4
0x03E4	0x0080      	MOVWF      INDF
0x03E5	0x0A84      	INCF       FSR, 1
0x03E6	0x082A      	MOVF       _I2C1_Timeout_Ptr, 0
0x03E7	0x00BF      	MOVWF      ___DoICPAddr
0x03E8	0x082B      	MOVF       _I2C1_Timeout_Ptr+1, 0
0x03E9	0x00C0      	MOVWF      ___DoICPAddr+1
0x03EA	0x20D0      	CALL       _____DoIFC
0x03EB	0x118A      	BCF        PCLATH, 3
0x03EC	0x120A      	BCF        PCLATH, 4
;__Lib_I2C_c34.c,169 :: 		
0x03ED	0x3001      	MOVLW      1
0x03EE	0x1283      	BCF        STATUS, 5
0x03EF	0x1303      	BCF        STATUS, 6
0x03F0	0x00F0      	MOVWF      R0
0x03F1	0x2C04      	GOTO       L_end_I2C1_Wr
;__Lib_I2C_c34.c,170 :: 		
L_I2C1_Wr33:
;__Lib_I2C_c34.c,171 :: 		
0x03F2	0x3001      	MOVLW      1
0x03F3	0x1683      	BSF        STATUS, 5
0x03F4	0x02C6      	SUBWF      I2C1_Wr_timeout_L0, 1
0x03F5	0x1C03      	BTFSS      STATUS, 0
0x03F6	0x02C7      	SUBWF      I2C1_Wr_timeout_L0+1, 1
0x03F7	0x1C03      	BTFSS      STATUS, 0
0x03F8	0x02C8      	SUBWF      I2C1_Wr_timeout_L0+2, 1
0x03F9	0x1C03      	BTFSS      STATUS, 0
0x03FA	0x02C9      	SUBWF      I2C1_Wr_timeout_L0+3, 1
;__Lib_I2C_c34.c,172 :: 		
L_I2C1_Wr32:
;__Lib_I2C_c34.c,173 :: 		
0x03FB	0x2BD1      	GOTO       L_I2C1_Wr30
L_I2C1_Wr31:
0x03FC	0x1683      	BSF        STATUS, 5
;__Lib_I2C_c34.c,175 :: 		
0x03FD	0x1B11      	BTFSC      SSPCON2, 6
0x03FE	0x2C01      	GOTO       L_I2C1_Wr34
;__Lib_I2C_c34.c,176 :: 		
0x03FF	0x01F0      	CLRF       R0
0x0400	0x2C04      	GOTO       L_end_I2C1_Wr
;__Lib_I2C_c34.c,177 :: 		
L_I2C1_Wr34:
;__Lib_I2C_c34.c,179 :: 		
0x0401	0x1511      	BSF        SSPCON2, 2
;__Lib_I2C_c34.c,180 :: 		
0x0402	0x3002      	MOVLW      2
0x0403	0x00F0      	MOVWF      R0
;__Lib_I2C_c34.c,182 :: 		
L_end_I2C1_Wr:
0x0404	0x0008      	RETURN
; end of _I2C1_Wr
_I2C1_Start:
;__Lib_I2C_c34.c,33 :: 		
;__Lib_I2C_c34.c,37 :: 		
0x0405	0x1283      	BCF        STATUS, 5
0x0406	0x1303      	BCF        STATUS, 6
0x0407	0x0858      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT, 0
0x0408	0x1683      	BSF        STATUS, 5
0x0409	0x00C8      	MOVWF      I2C1_Start_timeout_L0
0x040A	0x1283      	BCF        STATUS, 5
0x040B	0x0859      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+1, 0
0x040C	0x1683      	BSF        STATUS, 5
0x040D	0x00C9      	MOVWF      I2C1_Start_timeout_L0+1
0x040E	0x1283      	BCF        STATUS, 5
0x040F	0x085A      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+2, 0
0x0410	0x1683      	BSF        STATUS, 5
0x0411	0x00CA      	MOVWF      I2C1_Start_timeout_L0+2
0x0412	0x1283      	BCF        STATUS, 5
0x0413	0x085B      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT+3, 0
0x0414	0x1683      	BSF        STATUS, 5
0x0415	0x00CB      	MOVWF      I2C1_Start_timeout_L0+3
;__Lib_I2C_c34.c,39 :: 		
0x0416	0x01C6      	CLRF       I2C1_Start_j_L0
0x0417	0x01C7      	CLRF       I2C1_Start_j_L0+1
L_I2C1_Start2:
0x0418	0x0847      	MOVF       I2C1_Start_j_L0+1, 0
0x0419	0x3C12      	SUBLW      18
0x041A	0x1D03      	BTFSS      STATUS, 2
0x041B	0x2C1E      	GOTO       L__I2C1_Start39
0x041C	0x0846      	MOVF       I2C1_Start_j_L0, 0
0x041D	0x3C8E      	SUBLW      142
L__I2C1_Start39:
0x041E	0x1C03      	BTFSS      STATUS, 0
0x041F	0x2C29      	GOTO       L_I2C1_Start3
;__Lib_I2C_c34.c,40 :: 		
0x0420	0x20D7      	CALL       _I2C1_Is_Idle
0x0421	0x0870      	MOVF       R0, 0
0x0422	0x1903      	BTFSC      STATUS, 2
0x0423	0x2C25      	GOTO       L_I2C1_Start5
;__Lib_I2C_c34.c,41 :: 		
0x0424	0x2C29      	GOTO       L_I2C1_Start3
L_I2C1_Start5:
;__Lib_I2C_c34.c,39 :: 		
0x0425	0x0AC6      	INCF       I2C1_Start_j_L0, 1
0x0426	0x1903      	BTFSC      STATUS, 2
0x0427	0x0AC7      	INCF       I2C1_Start_j_L0+1, 1
;__Lib_I2C_c34.c,42 :: 		
0x0428	0x2C18      	GOTO       L_I2C1_Start2
L_I2C1_Start3:
;__Lib_I2C_c34.c,44 :: 		
0x0429	0x3012      	MOVLW      18
0x042A	0x0247      	SUBWF      I2C1_Start_j_L0+1, 0
0x042B	0x1D03      	BTFSS      STATUS, 2
0x042C	0x2C2F      	GOTO       L__I2C1_Start40
0x042D	0x308F      	MOVLW      143
0x042E	0x0246      	SUBWF      I2C1_Start_j_L0, 0
L__I2C1_Start40:
0x042F	0x1C03      	BTFSS      STATUS, 0
0x0430	0x2C34      	GOTO       L_I2C1_Start6
;__Lib_I2C_c34.c,45 :: 		
0x0431	0x307B      	MOVLW      123
0x0432	0x00F0      	MOVWF      R0
0x0433	0x2C62      	GOTO       L_end_I2C1_Start
L_I2C1_Start6:
;__Lib_I2C_c34.c,47 :: 		
0x0434	0x1411      	BSF        SSPCON2, 0
;__Lib_I2C_c34.c,48 :: 		
L_I2C1_Start8:
0x0435	0x1683      	BSF        STATUS, 5
0x0436	0x1C11      	BTFSS      SSPCON2, 0
0x0437	0x2C61      	GOTO       L_I2C1_Start9
;__Lib_I2C_c34.c,50 :: 		
0x0438	0x1283      	BCF        STATUS, 5
0x0439	0x0858      	MOVF       __Lib_I2C_c34__I2C1_TIMEOUT, 0
0x043A	0x0459      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+1, 0
0x043B	0x045A      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+2, 0
0x043C	0x045B      	IORWF      __Lib_I2C_c34__I2C1_TIMEOUT+3, 0
0x043D	0x1903      	BTFSC      STATUS, 2
0x043E	0x2C60      	GOTO       L_I2C1_Start10
;__Lib_I2C_c34.c,52 :: 		
0x043F	0x1683      	BSF        STATUS, 5
0x0440	0x0848      	MOVF       I2C1_Start_timeout_L0, 0
0x0441	0x0449      	IORWF      I2C1_Start_timeout_L0+1, 0
0x0442	0x044A      	IORWF      I2C1_Start_timeout_L0+2, 0
0x0443	0x044B      	IORWF      I2C1_Start_timeout_L0+3, 0
0x0444	0x1D03      	BTFSS      STATUS, 2
0x0445	0x2C57      	GOTO       L_I2C1_Start11
;__Lib_I2C_c34.c,54 :: 		
0x0446	0x082C      	MOVF       _I2C1_Timeout_Ptr+2, 0
0x0447	0x0084      	MOVWF      FSR
0x0448	0x3005      	MOVLW      5
0x0449	0x0080      	MOVWF      INDF
0x044A	0x0A84      	INCF       FSR, 1
0x044B	0x082A      	MOVF       _I2C1_Timeout_Ptr, 0
0x044C	0x00BF      	MOVWF      ___DoICPAddr
0x044D	0x082B      	MOVF       _I2C1_Timeout_Ptr+1, 0
0x044E	0x00C0      	MOVWF      ___DoICPAddr+1
0x044F	0x20D0      	CALL       _____DoIFC
0x0450	0x118A      	BCF        PCLATH, 3
0x0451	0x120A      	BCF        PCLATH, 4
;__Lib_I2C_c34.c,55 :: 		
0x0452	0x3001      	MOVLW      1
0x0453	0x1283      	BCF        STATUS, 5
0x0454	0x1303      	BCF        STATUS, 6
0x0455	0x00F0      	MOVWF      R0
0x0456	0x2C62      	GOTO       L_end_I2C1_Start
;__Lib_I2C_c34.c,56 :: 		
L_I2C1_Start11:
;__Lib_I2C_c34.c,57 :: 		
0x0457	0x3001      	MOVLW      1
0x0458	0x1683      	BSF        STATUS, 5
0x0459	0x02C8      	SUBWF      I2C1_Start_timeout_L0, 1
0x045A	0x1C03      	BTFSS      STATUS, 0
0x045B	0x02C9      	SUBWF      I2C1_Start_timeout_L0+1, 1
0x045C	0x1C03      	BTFSS      STATUS, 0
0x045D	0x02CA      	SUBWF      I2C1_Start_timeout_L0+2, 1
0x045E	0x1C03      	BTFSS      STATUS, 0
0x045F	0x02CB      	SUBWF      I2C1_Start_timeout_L0+3, 1
;__Lib_I2C_c34.c,58 :: 		
L_I2C1_Start10:
;__Lib_I2C_c34.c,59 :: 		
0x0460	0x2C35      	GOTO       L_I2C1_Start8
L_I2C1_Start9:
;__Lib_I2C_c34.c,60 :: 		
0x0461	0x01F0      	CLRF       R0
;__Lib_I2C_c34.c,62 :: 		
L_end_I2C1_Start:
0x0462	0x0008      	RETURN
; end of _I2C1_Start
_Seg_State:
;SSD.c,13 :: 		void Seg_State(void){
;SSD.c,14 :: 		if(SegState==SEG_WAIT1){           // Checking the condition to start the SSD ones diplay operation
0x0463	0x1283      	BCF        STATUS, 5
0x0464	0x1303      	BCF        STATUS, 6
0x0465	0x0864      	MOVF       _SegState, 0
0x0466	0x3A00      	XORLW      0
0x0467	0x1D03      	BTFSS      STATUS, 2
0x0468	0x2C6C      	GOTO       L_Seg_State0
;SSD.c,15 :: 		SegState = SEG_ONES;             // Changing the SSD state flag value to start to start the SSD ones diplay operation
0x0469	0x3001      	MOVLW      1
0x046A	0x00E4      	MOVWF      _SegState
;SSD.c,16 :: 		}
0x046B	0x2C73      	GOTO       L_Seg_State1
L_Seg_State0:
;SSD.c,17 :: 		else if(SegState==SEG_WAIT10){     // Checking the condition to start the SSD tens diplay operation
0x046C	0x0864      	MOVF       _SegState, 0
0x046D	0x3A64      	XORLW      100
0x046E	0x1D03      	BTFSS      STATUS, 2
0x046F	0x2C73      	GOTO       L_Seg_State2
;SSD.c,18 :: 		SegState = SEG_TENS;             // Changing the SSD state flag value to start to start the SSD tens diplay operation
0x0470	0x300A      	MOVLW      10
0x0471	0x00E4      	MOVWF      _SegState
;SSD.c,19 :: 		} else{
0x0472	0x2C73      	GOTO       L_Seg_State3
L_Seg_State2:
;SSD.c,21 :: 		}
L_Seg_State3:
L_Seg_State1:
;SSD.c,22 :: 		}
L_end_Seg_State:
0x0473	0x0008      	RETURN
; end of _Seg_State
_Init_Timer0:
;System.c,35 :: 		void Init_Timer0(void){
;System.c,36 :: 		INTCON.GIE=1;        // Enabling Global Interrupt
0x0474	0x178B      	BSF        INTCON, 7
;System.c,37 :: 		INTCON.PEIE=1;       // Enabling all unmasked peripheral interrupts
0x0475	0x170B      	BSF        INTCON, 6
;System.c,38 :: 		INTCON.TMR0IE=1;     // Enabling Timer0 Overflow Interrupt
0x0476	0x168B      	BSF        INTCON, 5
;System.c,39 :: 		OPTION_REG.PSA=0;    // Assigning Prescaler to the Timer0 module
0x0477	0x1683      	BSF        STATUS, 5
0x0478	0x1303      	BCF        STATUS, 6
0x0479	0x1181      	BCF        OPTION_REG, 3
;System.c,40 :: 		OPTION_REG.PS2=1;    // Setting the Prescaler rate
0x047A	0x1501      	BSF        OPTION_REG, 2
;System.c,41 :: 		OPTION_REG.PS1=1;    // Setting the Prescaler rate
0x047B	0x1481      	BSF        OPTION_REG, 1
;System.c,42 :: 		OPTION_REG.PS0=1;    // Setting the Prescaler rate
0x047C	0x1401      	BSF        OPTION_REG, 0
;System.c,43 :: 		TMR0=100;            // Setting Timer0 Module Register value with a value that gives overflow interrupt after 10ms
0x047D	0x3064      	MOVLW      100
0x047E	0x1283      	BCF        STATUS, 5
0x047F	0x0081      	MOVWF      TMR0
;System.c,44 :: 		}
L_end_Init_Timer0:
0x0480	0x0008      	RETURN
; end of _Init_Timer0
_Off_State:
;System.c,26 :: 		void Off_State(void){
;System.c,27 :: 		Wait();              // Calling the wait function
0x0481	0x2184      	CALL       _Wait
;System.c,28 :: 		PORTD=0;             // Setting all PORT D pins values as LOW
0x0482	0x0188      	CLRF       PORTD
;System.c,29 :: 		PORTA=0;             // Setting all PORT A pins values as LOW
0x0483	0x0185      	CLRF       PORTA
;System.c,30 :: 		}
L_end_Off_State:
0x0484	0x0008      	RETURN
; end of _Off_State
__7Seg:
;SSD.c,24 :: 		void _7Seg(void){
;SSD.c,25 :: 		if(SegState==SEG_ONES){       // Checking the condition to set the value of the ones SSD and turn it on (Determined in the ISR)
0x0485	0x1283      	BCF        STATUS, 5
0x0486	0x1303      	BCF        STATUS, 6
0x0487	0x0864      	MOVF       _SegState, 0
0x0488	0x3A01      	XORLW      1
0x0489	0x1D03      	BTFSS      STATUS, 2
0x048A	0x2CA6      	GOTO       L__7Seg4
;SSD.c,26 :: 		SegState = SEG_WAIT10;    // Setting the temprature state flag to the tens waiting state
0x048B	0x3064      	MOVLW      100
0x048C	0x00E4      	MOVWF      _SegState
;SSD.c,27 :: 		SegNum1 = SegNum%10;      // calculating the ones value
0x048D	0x300A      	MOVLW      10
0x048E	0x00F4      	MOVWF      R4
0x048F	0x3000      	MOVLW      0
0x0490	0x00F5      	MOVWF      R4+1
0x0491	0x0867      	MOVF       _SegNum, 0
0x0492	0x00F0      	MOVWF      R0
0x0493	0x0868      	MOVF       _SegNum+1, 0
0x0494	0x00F1      	MOVWF      R0+1
0x0495	0x22A9      	CALL       _Div_16x16_S
0x0496	0x0878      	MOVF       R8, 0
0x0497	0x00F0      	MOVWF      R0
0x0498	0x0879      	MOVF       R8+1, 0
0x0499	0x00F1      	MOVWF      R0+1
0x049A	0x0870      	MOVF       R0, 0
0x049B	0x00E2      	MOVWF      _SegNum1
0x049C	0x0871      	MOVF       R0+1, 0
0x049D	0x00E3      	MOVWF      _SegNum1+1
;SSD.c,28 :: 		PORTD = SSD[SegNum1];     // Setting the SSD value to the ones value
0x049E	0x0870      	MOVF       R0, 0
0x049F	0x3EA0      	ADDLW      _SSD
0x04A0	0x0084      	MOVWF      FSR
0x04A1	0x0800      	MOVF       INDF, 0
0x04A2	0x0088      	MOVWF      PORTD
;SSD.c,29 :: 		PORTA.B5=1;               // Turning on the ones SSD
0x04A3	0x1685      	BSF        PORTA, 5
;SSD.c,30 :: 		PORTA.B4=0;               // Turning off the tens SSD
0x04A4	0x1205      	BCF        PORTA, 4
;SSD.c,31 :: 		}
0x04A5	0x2CCC      	GOTO       L__7Seg5
L__7Seg4:
;SSD.c,33 :: 		else if(SegState==SEG_TENS){ // Checking the condition to set the value of the ones SSD and turn it on (Determined in the ISR)
0x04A6	0x0864      	MOVF       _SegState, 0
0x04A7	0x3A0A      	XORLW      10
0x04A8	0x1D03      	BTFSS      STATUS, 2
0x04A9	0x2CCC      	GOTO       L__7Seg6
;SSD.c,34 :: 		SegState = SEG_WAIT1;      // Setting the temprature state flag to the ones waiting state
0x04AA	0x01E4      	CLRF       _SegState
;SSD.c,35 :: 		TempSegNum = SegNum/10;    // Calculating temporary
0x04AB	0x300A      	MOVLW      10
0x04AC	0x00F4      	MOVWF      R4
0x04AD	0x3000      	MOVLW      0
0x04AE	0x00F5      	MOVWF      R4+1
0x04AF	0x0867      	MOVF       _SegNum, 0
0x04B0	0x00F0      	MOVWF      R0
0x04B1	0x0868      	MOVF       _SegNum+1, 0
0x04B2	0x00F1      	MOVWF      R0+1
0x04B3	0x22A9      	CALL       _Div_16x16_S
0x04B4	0x0870      	MOVF       R0, 0
0x04B5	0x00E9      	MOVWF      _TempSegNum
0x04B6	0x0871      	MOVF       R0+1, 0
0x04B7	0x00EA      	MOVWF      _TempSegNum+1
;SSD.c,36 :: 		SegNum10 = TempSegNum%10;  // calculating the tens value
0x04B8	0x300A      	MOVLW      10
0x04B9	0x00F4      	MOVWF      R4
0x04BA	0x3000      	MOVLW      0
0x04BB	0x00F5      	MOVWF      R4+1
0x04BC	0x22A9      	CALL       _Div_16x16_S
0x04BD	0x0878      	MOVF       R8, 0
0x04BE	0x00F0      	MOVWF      R0
0x04BF	0x0879      	MOVF       R8+1, 0
0x04C0	0x00F1      	MOVWF      R0+1
0x04C1	0x0870      	MOVF       R0, 0
0x04C2	0x00E5      	MOVWF      _SegNum10
0x04C3	0x0871      	MOVF       R0+1, 0
0x04C4	0x00E6      	MOVWF      _SegNum10+1
;SSD.c,37 :: 		PORTD = SSD[SegNum10];     // Setting the SSD value to the tens value
0x04C5	0x0870      	MOVF       R0, 0
0x04C6	0x3EA0      	ADDLW      _SSD
0x04C7	0x0084      	MOVWF      FSR
0x04C8	0x0800      	MOVF       INDF, 0
0x04C9	0x0088      	MOVWF      PORTD
;SSD.c,38 :: 		PORTA.B5=0;                // Turning off the ones SSD
0x04CA	0x1285      	BCF        PORTA, 5
;SSD.c,39 :: 		PORTA.B4=1;                // Turning on the tens SSD
0x04CB	0x1605      	BSF        PORTA, 4
;SSD.c,40 :: 		}
L__7Seg6:
L__7Seg5:
;SSD.c,41 :: 		}
L_end__7Seg:
0x04CC	0x0008      	RETURN
; end of __7Seg
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x04CD	0x218C      	CALL       _____DoICP
0x04CE	0x118A      	BCF        PCLATH, 3
0x04CF	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x04D0	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x04D1	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x04D2	0x0ABF      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x04D3	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x04D4	0x0AC0      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x04D5	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x04D6	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x04D7	0x2CCD      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x04D8	0x0008      	RETURN
; end of ___CC2DW
_ADC_Init:
;__Lib_ADC_A_C.c,19 :: 		
;__Lib_ADC_A_C.c,20 :: 		
0x04D9	0x30FF      	MOVLW      _ADC_Get_Sample
0x04DA	0x1683      	BSF        STATUS, 5
0x04DB	0x1303      	BCF        STATUS, 6
0x04DC	0x00B0      	MOVWF      _ADC_Get_Sample_Ptr
0x04DD	0x30FF      	MOVLW      hi_addr(_ADC_Get_Sample)
0x04DE	0x00B1      	MOVWF      _ADC_Get_Sample_Ptr+1
0x04DF	0x30FF      	MOVLW      FARG_ADC_Get_Sample_channel
0x04E0	0x00B2      	MOVWF      _ADC_Get_Sample_Ptr+2
0x04E1	0x30FF      	MOVLW      hi_addr(FARG_ADC_Get_Sample_channel)
;__Lib_ADC_A_C.c,22 :: 		
0x04E2	0x1283      	BCF        STATUS, 5
0x04E3	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_C.c,23 :: 		
0x04E4	0x30C0      	MOVLW      192
0x04E5	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.c,24 :: 		
0x04E6	0x0960      	COMF       _vref_mask, 0
0x04E7	0x00F0      	MOVWF      R0
0x04E8	0x0870      	MOVF       R0, 0
0x04E9	0x1683      	BSF        STATUS, 5
0x04EA	0x059F      	ANDWF      ADCON1, 1
;__Lib_ADC_A_C.c,25 :: 		
0x04EB	0x171F      	BSF        ADCON1, 6
;__Lib_ADC_A_C.c,26 :: 		
0x04EC	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_A_C.c,29 :: 		
0x04ED	0x1283      	BCF        STATUS, 5
0x04EE	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_C.c,30 :: 		
L_end_ADC_Init:
0x04EF	0x0008      	RETURN
; end of _ADC_Init
_Initialization:
;System.c,3 :: 		void Initialization(void){
;System.c,4 :: 		TRISD=0;             // Setting all PORT D pins directions as output
0x04F0	0x1683      	BSF        STATUS, 5
0x04F1	0x1303      	BCF        STATUS, 6
0x04F2	0x0188      	CLRF       TRISD
;System.c,5 :: 		TRISA.B2 = 1;        // Setting PORT A pin2 (Analog channel 2) as input
0x04F3	0x1505      	BSF        TRISA, 2
;System.c,6 :: 		TRISA.B4 = 0;        // Setting PORT A pin4 (Selection Display 3) pin as output
0x04F4	0x1205      	BCF        TRISA, 4
;System.c,7 :: 		TRISA.B5 = 0;        // Setting PORT A pin5 (Selection Display 4) pin as output
0x04F5	0x1285      	BCF        TRISA, 5
;System.c,9 :: 		TRISB.B0 = 1;        // Setting PORT B pin0 (External interrupt) as input
0x04F6	0x1406      	BSF        TRISB, 0
;System.c,10 :: 		TRISB.B2 = 1;        // Setting PORT B pin2 (Up Button) as input
0x04F7	0x1506      	BSF        TRISB, 2
;System.c,11 :: 		TRISB.B1 = 1;        // Setting PORT B pin1 (Down Button) as input
0x04F8	0x1486      	BSF        TRISB, 1
;System.c,12 :: 		TRISB.B7 = 0;        // Setting PORT B pin7 (Heating state LED) as output
0x04F9	0x1386      	BCF        TRISB, 7
;System.c,14 :: 		TRISC.B5 = 0;        // Setting PORT C pin5 (the heater) pin as output
0x04FA	0x1287      	BCF        TRISC, 5
;System.c,15 :: 		TRISC.B2 = 0;        // Setting PORT C pin2 (the fan) pin as output
0x04FB	0x1107      	BCF        TRISC, 2
;System.c,16 :: 		PORTC.B5 = 0;        // Setting PORT C pin5 (the heater) pin as LOW (Making sure the heater is off)
0x04FC	0x1283      	BCF        STATUS, 5
0x04FD	0x1287      	BCF        PORTC, 5
;System.c,17 :: 		PORTC.B2 = 0;        // Setting PORT C pin2 (the fan) pin as LOW (Making sure the fan is off)
0x04FE	0x1107      	BCF        PORTC, 2
;System.c,19 :: 		PORTB.B7 = 0;        // Setting PORT B pin7 (Heating state LED) pin as LOW
0x04FF	0x1386      	BCF        PORTB, 7
;System.c,21 :: 		PORTD=0;             // Setting all PORT D pins values as LOW
0x0500	0x0188      	CLRF       PORTD
;System.c,22 :: 		PORTA=0;             // Setting all PORT A pins values as LOW
0x0501	0x0185      	CLRF       PORTA
;System.c,24 :: 		}
L_end_Initialization:
0x0502	0x0008      	RETURN
; end of _Initialization
_Init_ExtInt:
;Buttons.c,14 :: 		void Init_ExtInt(void){
;Buttons.c,15 :: 		INTCON.GIE=1;        // Enabling Global Interrupt
0x0503	0x178B      	BSF        INTCON, 7
;Buttons.c,16 :: 		TRISB.B0 = 1;        // Sets PORTB pin0 (external interrupt) as input
0x0504	0x1683      	BSF        STATUS, 5
0x0505	0x1303      	BCF        STATUS, 6
0x0506	0x1406      	BSF        TRISB, 0
;Buttons.c,17 :: 		INTCON.INTE = 1;     // Enabling external interrupt
0x0507	0x160B      	BSF        INTCON, 4
;Buttons.c,18 :: 		}
L_end_Init_ExtInt:
0x0508	0x0008      	RETURN
; end of _Init_ExtInt
_Heater:
;TempControl.c,8 :: 		void Heater(void){
;TempControl.c,10 :: 		if(HeatingStateLED == LED_ON){                   // Checking if current blinking state of the SSD is On state
0x0509	0x1283      	BCF        STATUS, 5
0x050A	0x1303      	BCF        STATUS, 6
0x050B	0x0849      	MOVF       _HeatingStateLED, 0
0x050C	0x3A01      	XORLW      1
0x050D	0x1D03      	BTFSS      STATUS, 2
0x050E	0x2D11      	GOTO       L_Heater0
;TempControl.c,11 :: 		PORTB.B7 = 1;                                  // Sets Heating state LED to HIGH
0x050F	0x1786      	BSF        PORTB, 7
;TempControl.c,12 :: 		}else if(HeatingStateLED == LED_OFF){            // Checking if current blinking state of the SSD is Off state
0x0510	0x2D17      	GOTO       L_Heater1
L_Heater0:
0x0511	0x0849      	MOVF       _HeatingStateLED, 0
0x0512	0x3A00      	XORLW      0
0x0513	0x1D03      	BTFSS      STATUS, 2
0x0514	0x2D17      	GOTO       L_Heater2
;TempControl.c,13 :: 		PORTB.B7 = 0;                                  // Sets Heating state LED to LOW
0x0515	0x1386      	BCF        PORTB, 7
;TempControl.c,14 :: 		}else{
0x0516	0x2D17      	GOTO       L_Heater3
L_Heater2:
;TempControl.c,16 :: 		}
L_Heater3:
L_Heater1:
;TempControl.c,17 :: 		if(TempAvg < (ReqTemp + 5)){
0x0517	0x3005      	MOVLW      5
0x0518	0x0746      	ADDWF      _ReqTemp, 0
0x0519	0x00F1      	MOVWF      R1
0x051A	0x0847      	MOVF       _ReqTemp+1, 0
0x051B	0x1803      	BTFSC      STATUS, 0
0x051C	0x3E01      	ADDLW      1
0x051D	0x00F2      	MOVWF      R1+1
0x051E	0x3080      	MOVLW      128
0x051F	0x064B      	XORWF      _TempAvg+1, 0
0x0520	0x00F0      	MOVWF      R0
0x0521	0x3080      	MOVLW      128
0x0522	0x0672      	XORWF      R1+1, 0
0x0523	0x0270      	SUBWF      R0, 0
0x0524	0x1D03      	BTFSS      STATUS, 2
0x0525	0x2D28      	GOTO       L__Heater9
0x0526	0x0871      	MOVF       R1, 0
0x0527	0x024A      	SUBWF      _TempAvg, 0
L__Heater9:
0x0528	0x1803      	BTFSC      STATUS, 0
0x0529	0x2D2D      	GOTO       L_Heater4
;TempControl.c,18 :: 		PORTC.B5 = 1;                     // Setting PORT C pin5 (the heater) pin as HIGH (Turning the heater is on)
0x052A	0x1687      	BSF        PORTC, 5
;TempControl.c,19 :: 		PORTC.B2 = 0;                     // Setting PORT C pin2 (the fan) pin as LOW (Turning the fan is off)
0x052B	0x1107      	BCF        PORTC, 2
;TempControl.c,20 :: 		}else{
0x052C	0x2D2F      	GOTO       L_Heater5
L_Heater4:
;TempControl.c,21 :: 		Working_Mode = MODE_WAITING;      // Sets the working mode to waiting state (both Fan & Heater are off)
0x052D	0x3002      	MOVLW      2
0x052E	0x00C8      	MOVWF      _Working_Mode
;TempControl.c,22 :: 		}
L_Heater5:
;TempControl.c,23 :: 		}
L_end_Heater:
0x052F	0x0008      	RETURN
; end of _Heater
_Fan:
;TempControl.c,25 :: 		void Fan(void){
;TempControl.c,26 :: 		PORTB.B7 = 1;                                  // Sets Heating state LED to HIGH
0x0530	0x1283      	BCF        STATUS, 5
0x0531	0x1303      	BCF        STATUS, 6
0x0532	0x1786      	BSF        PORTB, 7
;TempControl.c,27 :: 		if(TempAvg > (ReqTemp - 5)){
0x0533	0x3005      	MOVLW      5
0x0534	0x0246      	SUBWF      _ReqTemp, 0
0x0535	0x00F1      	MOVWF      R1
0x0536	0x3000      	MOVLW      0
0x0537	0x1C03      	BTFSS      STATUS, 0
0x0538	0x3E01      	ADDLW      1
0x0539	0x0247      	SUBWF      _ReqTemp+1, 0
0x053A	0x00F2      	MOVWF      R1+1
0x053B	0x3080      	MOVLW      128
0x053C	0x0672      	XORWF      R1+1, 0
0x053D	0x00F0      	MOVWF      R0
0x053E	0x3080      	MOVLW      128
0x053F	0x064B      	XORWF      _TempAvg+1, 0
0x0540	0x0270      	SUBWF      R0, 0
0x0541	0x1D03      	BTFSS      STATUS, 2
0x0542	0x2D45      	GOTO       L__Fan11
0x0543	0x084A      	MOVF       _TempAvg, 0
0x0544	0x0271      	SUBWF      R1, 0
L__Fan11:
0x0545	0x1803      	BTFSC      STATUS, 0
0x0546	0x2D4A      	GOTO       L_Fan6
;TempControl.c,28 :: 		PORTC.B5 = 0;                      // Setting PORT C pin5 (the heater) pin as LOW (Turning the heater is off)
0x0547	0x1287      	BCF        PORTC, 5
;TempControl.c,29 :: 		PORTC.B2 = 1;                      // Setting PORT C pin2 (the fan) pin as HIGH (Turning the fan is on)
0x0548	0x1507      	BSF        PORTC, 2
;TempControl.c,30 :: 		}else{
0x0549	0x2D4C      	GOTO       L_Fan7
L_Fan6:
;TempControl.c,31 :: 		Working_Mode = MODE_WAITING;       // Sets the working mode to waiting state (both Fan & Heater are off)
0x054A	0x3002      	MOVLW      2
0x054B	0x00C8      	MOVWF      _Working_Mode
;TempControl.c,32 :: 		}
L_Fan7:
;TempControl.c,34 :: 		}
L_end_Fan:
0x054C	0x0008      	RETURN
; end of _Fan
_TempSettingMode:
;Buttons.c,37 :: 		void TempSettingMode(void){
;Buttons.c,38 :: 		ButtonsTCounter++;                           // Increases the time counter controlling checking buttons states
0x054D	0x1283      	BCF        STATUS, 5
0x054E	0x1303      	BCF        STATUS, 6
0x054F	0x0AD6      	INCF       _ButtonsTCounter, 1
0x0550	0x1903      	BTFSC      STATUS, 2
0x0551	0x0AD7      	INCF       _ButtonsTCounter+1, 1
;Buttons.c,40 :: 		if(ButtonsTCounter==10){                     // Cheking if 100 ms passed (The condition to check buttons states)
0x0552	0x3000      	MOVLW      0
0x0553	0x0657      	XORWF      _ButtonsTCounter+1, 0
0x0554	0x1D03      	BTFSS      STATUS, 2
0x0555	0x2D58      	GOTO       L__TempSettingMode19
0x0556	0x300A      	MOVLW      10
0x0557	0x0656      	XORWF      _ButtonsTCounter, 0
L__TempSettingMode19:
0x0558	0x1D03      	BTFSS      STATUS, 2
0x0559	0x2D8C      	GOTO       L_TempSettingMode4
;Buttons.c,41 :: 		if(PORTB.B2 == 0){                         // Cheking if Up button is pressed
0x055A	0x1906      	BTFSC      PORTB, 2
0x055B	0x2D72      	GOTO       L_TempSettingMode5
;Buttons.c,42 :: 		SegBlink = SEG_ON;                       // Setting blinking state of the SSD to On state
0x055C	0x3001      	MOVLW      1
0x055D	0x00D3      	MOVWF      _SegBlink
;Buttons.c,43 :: 		Time_1_Sec = 0;                          // Ressetting the 1 secondd counter value to 0
0x055E	0x01D0      	CLRF       _Time_1_Sec
0x055F	0x01D1      	CLRF       _Time_1_Sec+1
;Buttons.c,44 :: 		if(ReqTemp < 75){
0x0560	0x3080      	MOVLW      128
0x0561	0x0647      	XORWF      _ReqTemp+1, 0
0x0562	0x00F0      	MOVWF      R0
0x0563	0x3080      	MOVLW      128
0x0564	0x0270      	SUBWF      R0, 0
0x0565	0x1D03      	BTFSS      STATUS, 2
0x0566	0x2D69      	GOTO       L__TempSettingMode20
0x0567	0x304B      	MOVLW      75
0x0568	0x0246      	SUBWF      _ReqTemp, 0
L__TempSettingMode20:
0x0569	0x1803      	BTFSC      STATUS, 0
0x056A	0x2D6F      	GOTO       L_TempSettingMode6
;Buttons.c,45 :: 		ReqTemp += 5;                            // Increasing required temprature by 5 degrees
0x056B	0x3005      	MOVLW      5
0x056C	0x07C6      	ADDWF      _ReqTemp, 1
0x056D	0x1803      	BTFSC      STATUS, 0
0x056E	0x0AC7      	INCF       _ReqTemp+1, 1
;Buttons.c,46 :: 		}
L_TempSettingMode6:
;Buttons.c,47 :: 		Time_5_Sec = 0;                          // Resetting the time counter counting 5 seconds to 0
0x056F	0x01D4      	CLRF       _Time_5_Sec
0x0570	0x01D5      	CLRF       _Time_5_Sec+1
;Buttons.c,48 :: 		}else if(PORTB.B1 == 0){                   // Cheking if Down button is pressed
0x0571	0x2D8A      	GOTO       L_TempSettingMode7
L_TempSettingMode5:
0x0572	0x1886      	BTFSC      PORTB, 1
0x0573	0x2D8A      	GOTO       L_TempSettingMode8
;Buttons.c,49 :: 		SegBlink = SEG_ON;                       // Setting blinking state of the SSD to On state
0x0574	0x3001      	MOVLW      1
0x0575	0x00D3      	MOVWF      _SegBlink
;Buttons.c,50 :: 		Time_1_Sec = 0;                          // Ressetting the 1 secondd counter value to 0
0x0576	0x01D0      	CLRF       _Time_1_Sec
0x0577	0x01D1      	CLRF       _Time_1_Sec+1
;Buttons.c,51 :: 		if(ReqTemp > 35){
0x0578	0x3080      	MOVLW      128
0x0579	0x00F0      	MOVWF      R0
0x057A	0x3080      	MOVLW      128
0x057B	0x0647      	XORWF      _ReqTemp+1, 0
0x057C	0x0270      	SUBWF      R0, 0
0x057D	0x1D03      	BTFSS      STATUS, 2
0x057E	0x2D81      	GOTO       L__TempSettingMode21
0x057F	0x0846      	MOVF       _ReqTemp, 0
0x0580	0x3C23      	SUBLW      35
L__TempSettingMode21:
0x0581	0x1803      	BTFSC      STATUS, 0
0x0582	0x2D87      	GOTO       L_TempSettingMode9
;Buttons.c,52 :: 		ReqTemp -= 5;                            // Decreasing required temprature by 5 degrees
0x0583	0x3005      	MOVLW      5
0x0584	0x02C6      	SUBWF      _ReqTemp, 1
0x0585	0x1C03      	BTFSS      STATUS, 0
0x0586	0x03C7      	DECF       _ReqTemp+1, 1
;Buttons.c,53 :: 		}
L_TempSettingMode9:
;Buttons.c,54 :: 		Time_5_Sec = 0;                          // Resetting the time counter counting 5 seconds to 0
0x0587	0x01D4      	CLRF       _Time_5_Sec
0x0588	0x01D5      	CLRF       _Time_5_Sec+1
;Buttons.c,55 :: 		}else{
0x0589	0x2D8A      	GOTO       L_TempSettingMode10
L_TempSettingMode8:
;Buttons.c,57 :: 		}
L_TempSettingMode10:
L_TempSettingMode7:
;Buttons.c,58 :: 		ButtonsTCounter = 0;                       // Resetting the time counter controlling checking buttons states
0x058A	0x01D6      	CLRF       _ButtonsTCounter
0x058B	0x01D7      	CLRF       _ButtonsTCounter+1
;Buttons.c,59 :: 		}
L_TempSettingMode4:
;Buttons.c,60 :: 		if(SegBlink == SEG_ON){                      // Checks if the current state of the SSD is On
0x058C	0x0853      	MOVF       _SegBlink, 0
0x058D	0x3A01      	XORLW      1
0x058E	0x1D03      	BTFSS      STATUS, 2
0x058F	0x2D96      	GOTO       L_TempSettingMode11
;Buttons.c,61 :: 		SegNum = ReqTemp;                          // Sets the number displayed on SSD to the current required temprature
0x0590	0x0846      	MOVF       _ReqTemp, 0
0x0591	0x00E7      	MOVWF      _SegNum
0x0592	0x0847      	MOVF       _ReqTemp+1, 0
0x0593	0x00E8      	MOVWF      _SegNum+1
;Buttons.c,62 :: 		Seg_State();                               // Calls the SSD state controlling function
0x0594	0x2463      	CALL       _Seg_State
;Buttons.c,63 :: 		}else if(SegBlink == SEG_OFF){               // Checks if the current state of the SSD is Off
0x0595	0x2D9D      	GOTO       L_TempSettingMode12
L_TempSettingMode11:
0x0596	0x0853      	MOVF       _SegBlink, 0
0x0597	0x3A00      	XORLW      0
0x0598	0x1D03      	BTFSS      STATUS, 2
0x0599	0x2D9D      	GOTO       L_TempSettingMode13
;Buttons.c,64 :: 		PORTD = 0;                                 // Resets values of all PORT D pins to 0
0x059A	0x0188      	CLRF       PORTD
;Buttons.c,65 :: 		PORTA.B5=0;                                // Turning off the ones SSD
0x059B	0x1285      	BCF        PORTA, 5
;Buttons.c,66 :: 		PORTA.B4=0;                                // Turning off the tens SSD
0x059C	0x1205      	BCF        PORTA, 4
;Buttons.c,67 :: 		}
L_TempSettingMode13:
L_TempSettingMode12:
;Buttons.c,69 :: 		}
L_end_TempSettingMode:
0x059D	0x0008      	RETURN
; end of _TempSettingMode
_EEPROMWriteVal:
;EEPROM.c,5 :: 		void EEPROMWriteVal(void){
;EEPROM.c,6 :: 		I2C1_Start();             // issue I2C start signal
0x059E	0x2405      	CALL       _I2C1_Start
;EEPROM.c,7 :: 		I2C1_Wr(0xA2);            // send byte via I2C  (device address + W)
0x059F	0x30A2      	MOVLW      162
0x05A0	0x1283      	BCF        STATUS, 5
0x05A1	0x1303      	BCF        STATUS, 6
0x05A2	0x00A7      	MOVWF      FARG_I2C1_Wr_data_
0x05A3	0x2381      	CALL       _I2C1_Wr
;EEPROM.c,8 :: 		I2C1_Wr(0);               // send byte (address of EEPROM location)
0x05A4	0x1283      	BCF        STATUS, 5
0x05A5	0x1303      	BCF        STATUS, 6
0x05A6	0x01A7      	CLRF       FARG_I2C1_Wr_data_
0x05A7	0x2381      	CALL       _I2C1_Wr
;EEPROM.c,9 :: 		I2C1_Wr(ReqTemp);             // send data (data to be written)
0x05A8	0x1283      	BCF        STATUS, 5
0x05A9	0x1303      	BCF        STATUS, 6
0x05AA	0x0846      	MOVF       _ReqTemp, 0
0x05AB	0x00A7      	MOVWF      FARG_I2C1_Wr_data_
0x05AC	0x2381      	CALL       _I2C1_Wr
;EEPROM.c,10 :: 		I2C1_Stop();              // issue I2C stop signal
0x05AD	0x2162      	CALL       _I2C1_Stop
;EEPROM.c,11 :: 		Delay_ms(100);
0x05AE	0x3003      	MOVLW      3
0x05AF	0x00FB      	MOVWF      R11
0x05B0	0x3008      	MOVLW      8
0x05B1	0x00FC      	MOVWF      R12
0x05B2	0x3077      	MOVLW      119
0x05B3	0x00FD      	MOVWF      R13
L_EEPROMWriteVal0:
0x05B4	0x0BFD      	DECFSZ     R13, 1
0x05B5	0x2DB4      	GOTO       L_EEPROMWriteVal0
0x05B6	0x0BFC      	DECFSZ     R12, 1
0x05B7	0x2DB4      	GOTO       L_EEPROMWriteVal0
0x05B8	0x0BFB      	DECFSZ     R11, 1
0x05B9	0x2DB4      	GOTO       L_EEPROMWriteVal0
;EEPROM.c,12 :: 		}
L_end_EEPROMWriteVal:
0x05BA	0x0008      	RETURN
; end of _EEPROMWriteVal
_WorkingMode:
;Buttons.c,20 :: 		void WorkingMode(void){
;Buttons.c,21 :: 		ButtonsTCounter++;
0x05BB	0x1283      	BCF        STATUS, 5
0x05BC	0x1303      	BCF        STATUS, 6
0x05BD	0x0AD6      	INCF       _ButtonsTCounter, 1
0x05BE	0x1903      	BTFSC      STATUS, 2
0x05BF	0x0AD7      	INCF       _ButtonsTCounter+1, 1
;Buttons.c,22 :: 		Seg_State();                                // Calls the SSD state controlling function
0x05C0	0x2463      	CALL       _Seg_State
;Buttons.c,23 :: 		TempStartRead();                            // Calls the temprature start reading function
0x05C1	0x236F      	CALL       _TempStartRead
;Buttons.c,24 :: 		if(ButtonsTCounter==10){                    // Checks if 100 ms passed to start reading the state of the Up & Down buttons
0x05C2	0x3000      	MOVLW      0
0x05C3	0x0657      	XORWF      _ButtonsTCounter+1, 0
0x05C4	0x1D03      	BTFSS      STATUS, 2
0x05C5	0x2DC8      	GOTO       L__WorkingMode17
0x05C6	0x300A      	MOVLW      10
0x05C7	0x0656      	XORWF      _ButtonsTCounter, 0
L__WorkingMode17:
0x05C8	0x1D03      	BTFSS      STATUS, 2
0x05C9	0x2DD6      	GOTO       L_WorkingMode0
;Buttons.c,25 :: 		if((PORTB.B2 == 0) || (PORTB.B1 == 0)){   // Checks if the Up or Down buttons are pressed
0x05CA	0x1D06      	BTFSS      PORTB, 2
0x05CB	0x2DCF      	GOTO       L__WorkingMode14
0x05CC	0x1C86      	BTFSS      PORTB, 1
0x05CD	0x2DCF      	GOTO       L__WorkingMode14
0x05CE	0x2DD4      	GOTO       L_WorkingMode3
L__WorkingMode14:
;Buttons.c,26 :: 		OnMode = ON_MODE_TEMP_SETTING;          // Sets the Mode of the system to temprature setting mode
0x05CF	0x01E1      	CLRF       _OnMode
;Buttons.c,27 :: 		SegBlink = SEG_ON;                      // Setting blinking state of the SSD to On state
0x05D0	0x3001      	MOVLW      1
0x05D1	0x00D3      	MOVWF      _SegBlink
;Buttons.c,28 :: 		Time_1_Sec = 0;                         // Ressetting the 1 secondd counter value to 0
0x05D2	0x01D0      	CLRF       _Time_1_Sec
0x05D3	0x01D1      	CLRF       _Time_1_Sec+1
;Buttons.c,29 :: 		}
L_WorkingMode3:
;Buttons.c,30 :: 		ButtonsTCounter = 0;                      // resets the counter variable that saves the time to check the states of the Up & Down buttons
0x05D4	0x01D6      	CLRF       _ButtonsTCounter
0x05D5	0x01D7      	CLRF       _ButtonsTCounter+1
;Buttons.c,31 :: 		}
L_WorkingMode0:
;Buttons.c,35 :: 		}
L_end_WorkingMode:
0x05D6	0x0008      	RETURN
; end of _WorkingMode
_I2C1_Init:
;__Lib_I2C_c34.c,188 :: 		
;__Lib_I2C_c34.c,190 :: 		
0x05D7	0x30D7      	MOVLW      _I2C1_Is_Idle
0x05D8	0x1683      	BSF        STATUS, 5
0x05D9	0x1303      	BCF        STATUS, 6
0x05DA	0x00AD      	MOVWF      _I2C_Is_Idle_Ptr
0x05DB	0x3000      	MOVLW      hi_addr(_I2C1_Is_Idle)
0x05DC	0x00AE      	MOVWF      _I2C_Is_Idle_Ptr+1
0x05DD	0x3000      	MOVLW      0
0x05DE	0x00AF      	MOVWF      _I2C_Is_Idle_Ptr+2
0x05DF	0x3000      	MOVLW      0
;__Lib_I2C_c34.c,191 :: 		
0x05E0	0x3005      	MOVLW      _I2C1_Start
0x05E1	0x00B9      	MOVWF      _I2C_Start_Ptr
0x05E2	0x3004      	MOVLW      hi_addr(_I2C1_Start)
0x05E3	0x00BA      	MOVWF      _I2C_Start_Ptr+1
0x05E4	0x3000      	MOVLW      0
0x05E5	0x00BB      	MOVWF      _I2C_Start_Ptr+2
0x05E6	0x3000      	MOVLW      0
;__Lib_I2C_c34.c,192 :: 		
0x05E7	0x30FF      	MOVLW      _I2C1_Repeated_Start
0x05E8	0x00BC      	MOVWF      _I2C_Restart_Ptr
0x05E9	0x30FF      	MOVLW      hi_addr(_I2C1_Repeated_Start)
0x05EA	0x00BD      	MOVWF      _I2C_Restart_Ptr+1
0x05EB	0x3000      	MOVLW      0
0x05EC	0x00BE      	MOVWF      _I2C_Restart_Ptr+2
0x05ED	0x3000      	MOVLW      0
;__Lib_I2C_c34.c,193 :: 		
0x05EE	0x301C      	MOVLW      _I2C1_Rd
0x05EF	0x00B3      	MOVWF      _I2C_Read_Ptr
0x05F0	0x3002      	MOVLW      hi_addr(_I2C1_Rd)
0x05F1	0x00B4      	MOVWF      _I2C_Read_Ptr+1
0x05F2	0x3028      	MOVLW      FARG_I2C1_Rd_ack
0x05F3	0x00B5      	MOVWF      _I2C_Read_Ptr+2
0x05F4	0x3000      	MOVLW      hi_addr(FARG_I2C1_Rd_ack)
;__Lib_I2C_c34.c,194 :: 		
0x05F5	0x3081      	MOVLW      _I2C1_Wr
0x05F6	0x00B6      	MOVWF      _I2C_Write_Ptr
0x05F7	0x3003      	MOVLW      hi_addr(_I2C1_Wr)
0x05F8	0x00B7      	MOVWF      _I2C_Write_Ptr+1
0x05F9	0x3027      	MOVLW      FARG_I2C1_Wr_data_
0x05FA	0x00B8      	MOVWF      _I2C_Write_Ptr+2
0x05FB	0x3000      	MOVLW      hi_addr(FARG_I2C1_Wr_data_)
;__Lib_I2C_c34.c,195 :: 		
0x05FC	0x3062      	MOVLW      _I2C1_Stop
0x05FD	0x1283      	BCF        STATUS, 5
0x05FE	0x00ED      	MOVWF      _I2C_Stop_Ptr
0x05FF	0x3001      	MOVLW      hi_addr(_I2C1_Stop)
0x0600	0x00EE      	MOVWF      _I2C_Stop_Ptr+1
0x0601	0x3000      	MOVLW      0
0x0602	0x00EF      	MOVWF      _I2C_Stop_Ptr+2
0x0603	0x3000      	MOVLW      0
;__Lib_I2C_c34.c,197 :: 		
0x0604	0x1683      	BSF        STATUS, 5
0x0605	0x1314      	BCF        SSPSTAT, 6
;__Lib_I2C_c34.c,198 :: 		
0x0606	0x1394      	BCF        SSPSTAT, 7
;__Lib_I2C_c34.c,199 :: 		
0x0607	0x1607      	BSF        TRISC4_bit, BitPos(TRISC4_bit+0)
;__Lib_I2C_c34.c,200 :: 		
0x0608	0x1587      	BSF        TRISC3_bit, BitPos(TRISC3_bit+0)
;__Lib_I2C_c34.c,201 :: 		
0x0609	0x3038      	MOVLW      56
0x060A	0x1283      	BCF        STATUS, 5
0x060B	0x0094      	MOVWF      SSPCON
;__Lib_I2C_c34.c,202 :: 		
L_end_I2C1_Init:
0x060C	0x0008      	RETURN
; end of _I2C1_Init
_Temp_Avg:
;Temprature.c,31 :: 		void Temp_Avg(void){
;Temprature.c,32 :: 		if(TempReadFlag == TEMP_READ){                                                // Checking the temprature start reading condition (Determined in the ISR)
0x060D	0x1283      	BCF        STATUS, 5
0x060E	0x1303      	BCF        STATUS, 6
0x060F	0x0852      	MOVF       _TempReadFlag, 0
0x0610	0x3A00      	XORLW      0
0x0611	0x1D03      	BTFSS      STATUS, 2
0x0612	0x2E87      	GOTO       L_Temp_Avg2
;Temprature.c,33 :: 		TempReadFlag = TEMP_WAIT;                                                   // Resetting the temprature start reading flag
0x0613	0x3001      	MOVLW      1
0x0614	0x00D2      	MOVWF      _TempReadFlag
;Temprature.c,34 :: 		ADC_Val = ADC_Read(2);                                                      // Reading the analog value on channel 2
0x0615	0x3002      	MOVLW      2
0x0616	0x1683      	BSF        STATUS, 5
0x0617	0x00C5      	MOVWF      FARG_ADC_Read_channel
0x0618	0x2193      	CALL       _ADC_Read
0x0619	0x0870      	MOVF       R0, 0
0x061A	0x1283      	BCF        STATUS, 5
0x061B	0x00CC      	MOVWF      _ADC_Val
0x061C	0x0871      	MOVF       R0+1, 0
0x061D	0x00CD      	MOVWF      _ADC_Val+1
;Temprature.c,35 :: 		TempADC_Val = ADC_Val * 4.89;                                               // Calculating the sample temprature value
0x061E	0x2166      	CALL       _int2double
0x061F	0x30E1      	MOVLW      225
0x0620	0x00F4      	MOVWF      R4
0x0621	0x307A      	MOVLW      122
0x0622	0x00F5      	MOVWF      R4+1
0x0623	0x301C      	MOVLW      28
0x0624	0x00F6      	MOVWF      R4+2
0x0625	0x3081      	MOVLW      129
0x0626	0x00F7      	MOVWF      R4+3
0x0627	0x21BB      	CALL       _Mul_32x32_FP
0x0628	0x2312      	CALL       _double2int
0x0629	0x0870      	MOVF       R0, 0
0x062A	0x00CE      	MOVWF      _TempADC_Val
0x062B	0x0871      	MOVF       R0+1, 0
0x062C	0x00CF      	MOVWF      _TempADC_Val+1
;Temprature.c,36 :: 		SampleADC_Val = TempADC_Val/10;                                             // Calculating the sample temprature value
0x062D	0x300A      	MOVLW      10
0x062E	0x00F4      	MOVWF      R4
0x062F	0x3000      	MOVLW      0
0x0630	0x00F5      	MOVWF      R4+1
0x0631	0x22A9      	CALL       _Div_16x16_S
0x0632	0x0870      	MOVF       R0, 0
0x0633	0x00AD      	MOVWF      _SampleADC_Val
0x0634	0x0871      	MOVF       R0+1, 0
0x0635	0x00AE      	MOVWF      _SampleADC_Val+1
;Temprature.c,37 :: 		TempratureSamples[Temp_Array_Counter] = SampleADC_Val;                      // Saving the sample value in the Sample array
0x0636	0x0829      	MOVF       _Temp_Array_Counter, 0
0x0637	0x00F2      	MOVWF      R2
0x0638	0x082A      	MOVF       _Temp_Array_Counter+1, 0
0x0639	0x00F3      	MOVWF      R2+1
0x063A	0x0DF2      	RLF        R2, 1
0x063B	0x0DF3      	RLF        R2+1, 1
0x063C	0x1072      	BCF        R2, 0
0x063D	0x0872      	MOVF       R2, 0
0x063E	0x3E2F      	ADDLW      _TempratureSamples
0x063F	0x0084      	MOVWF      FSR
0x0640	0x0870      	MOVF       R0, 0
0x0641	0x0080      	MOVWF      INDF
0x0642	0x0871      	MOVF       R0+1, 0
0x0643	0x0A84      	INCF       FSR, 1
0x0644	0x0080      	MOVWF      INDF
;Temprature.c,38 :: 		TempSum = 0;                                                                // Resetting the summing value variable to 0
0x0645	0x01AB      	CLRF       _TempSum
0x0646	0x01AC      	CLRF       _TempSum+1
;Temprature.c,39 :: 		for(Temp_Loop_Counter=0;Temp_Loop_Counter<10;Temp_Loop_Counter++ ){         // summing the values of the temprature samples
0x0647	0x01C4      	CLRF       _Temp_Loop_Counter
0x0648	0x01C5      	CLRF       _Temp_Loop_Counter+1
L_Temp_Avg3:
0x0649	0x3080      	MOVLW      128
0x064A	0x0645      	XORWF      _Temp_Loop_Counter+1, 0
0x064B	0x00F0      	MOVWF      R0
0x064C	0x3080      	MOVLW      128
0x064D	0x0270      	SUBWF      R0, 0
0x064E	0x1D03      	BTFSS      STATUS, 2
0x064F	0x2E52      	GOTO       L__Temp_Avg10
0x0650	0x300A      	MOVLW      10
0x0651	0x0244      	SUBWF      _Temp_Loop_Counter, 0
L__Temp_Avg10:
0x0652	0x1803      	BTFSC      STATUS, 0
0x0653	0x2E69      	GOTO       L_Temp_Avg4
;Temprature.c,40 :: 		TempSum += TempratureSamples[Temp_Loop_Counter];                          // summing the values of the temprature samples
0x0654	0x0844      	MOVF       _Temp_Loop_Counter, 0
0x0655	0x00F0      	MOVWF      R0
0x0656	0x0845      	MOVF       _Temp_Loop_Counter+1, 0
0x0657	0x00F1      	MOVWF      R0+1
0x0658	0x0DF0      	RLF        R0, 1
0x0659	0x0DF1      	RLF        R0+1, 1
0x065A	0x1070      	BCF        R0, 0
0x065B	0x0870      	MOVF       R0, 0
0x065C	0x3E2F      	ADDLW      _TempratureSamples
0x065D	0x0084      	MOVWF      FSR
0x065E	0x0800      	MOVF       INDF, 0
0x065F	0x07AB      	ADDWF      _TempSum, 1
0x0660	0x0A84      	INCF       FSR, 1
0x0661	0x0800      	MOVF       INDF, 0
0x0662	0x1803      	BTFSC      STATUS, 0
0x0663	0x3E01      	ADDLW      1
0x0664	0x07AC      	ADDWF      _TempSum+1, 1
;Temprature.c,39 :: 		for(Temp_Loop_Counter=0;Temp_Loop_Counter<10;Temp_Loop_Counter++ ){         // summing the values of the temprature samples
0x0665	0x0AC4      	INCF       _Temp_Loop_Counter, 1
0x0666	0x1903      	BTFSC      STATUS, 2
0x0667	0x0AC5      	INCF       _Temp_Loop_Counter+1, 1
;Temprature.c,41 :: 		}
0x0668	0x2E49      	GOTO       L_Temp_Avg3
L_Temp_Avg4:
;Temprature.c,42 :: 		TempAvg = TempSum/10;           // Calculating the average of the 10 Samples
0x0669	0x300A      	MOVLW      10
0x066A	0x00F4      	MOVWF      R4
0x066B	0x3000      	MOVLW      0
0x066C	0x00F5      	MOVWF      R4+1
0x066D	0x082B      	MOVF       _TempSum, 0
0x066E	0x00F0      	MOVWF      R0
0x066F	0x082C      	MOVF       _TempSum+1, 0
0x0670	0x00F1      	MOVWF      R0+1
0x0671	0x22A9      	CALL       _Div_16x16_S
0x0672	0x0870      	MOVF       R0, 0
0x0673	0x00CA      	MOVWF      _TempAvg
0x0674	0x0871      	MOVF       R0+1, 0
0x0675	0x00CB      	MOVWF      _TempAvg+1
;Temprature.c,43 :: 		SegNum = TempAvg;               // Changing the value of the Global variable of the displayed number on SSD to the average temprature value
0x0676	0x0870      	MOVF       R0, 0
0x0677	0x00E7      	MOVWF      _SegNum
0x0678	0x0871      	MOVF       R0+1, 0
0x0679	0x00E8      	MOVWF      _SegNum+1
;Temprature.c,45 :: 		Temp_Array_Counter++;           // Increasing the variable determining which index of the array to save the temprature sample in it's corresponding index of the array
0x067A	0x0AA9      	INCF       _Temp_Array_Counter, 1
0x067B	0x1903      	BTFSC      STATUS, 2
0x067C	0x0AAA      	INCF       _Temp_Array_Counter+1, 1
;Temprature.c,47 :: 		if(Temp_Array_Counter == 10){   // Checking the condition of the array counter to be reset to 0
0x067D	0x3000      	MOVLW      0
0x067E	0x062A      	XORWF      _Temp_Array_Counter+1, 0
0x067F	0x1D03      	BTFSS      STATUS, 2
0x0680	0x2E83      	GOTO       L__Temp_Avg11
0x0681	0x300A      	MOVLW      10
0x0682	0x0629      	XORWF      _Temp_Array_Counter, 0
L__Temp_Avg11:
0x0683	0x1D03      	BTFSS      STATUS, 2
0x0684	0x2E87      	GOTO       L_Temp_Avg6
;Temprature.c,48 :: 		Temp_Array_Counter = 0;       // Resetting the temprature array counter to 0
0x0685	0x01A9      	CLRF       _Temp_Array_Counter
0x0686	0x01AA      	CLRF       _Temp_Array_Counter+1
;Temprature.c,49 :: 		}
L_Temp_Avg6:
;Temprature.c,50 :: 		}
L_Temp_Avg2:
;Temprature.c,51 :: 		}
L_end_Temp_Avg:
0x0687	0x0008      	RETURN
; end of _Temp_Avg
_EEPROMReadVal:
;EEPROM.c,14 :: 		void EEPROMReadVal(void){
;EEPROM.c,15 :: 		I2C1_Start();              // issue I2C start signal
0x0688	0x2405      	CALL       _I2C1_Start
;EEPROM.c,16 :: 		I2C1_Wr(0xA2);             // send byte via I2C  (device address + W)
0x0689	0x30A2      	MOVLW      162
0x068A	0x1283      	BCF        STATUS, 5
0x068B	0x1303      	BCF        STATUS, 6
0x068C	0x00A7      	MOVWF      FARG_I2C1_Wr_data_
0x068D	0x2381      	CALL       _I2C1_Wr
;EEPROM.c,17 :: 		I2C1_Wr(0);                // send byte (data address)
0x068E	0x1283      	BCF        STATUS, 5
0x068F	0x1303      	BCF        STATUS, 6
0x0690	0x01A7      	CLRF       FARG_I2C1_Wr_data_
0x0691	0x2381      	CALL       _I2C1_Wr
;EEPROM.c,18 :: 		I2C1_Start();     // issue I2C signal repeated start
0x0692	0x2405      	CALL       _I2C1_Start
;EEPROM.c,19 :: 		I2C1_Wr(0xA3);             // send byte (device address + R)
0x0693	0x30A3      	MOVLW      163
0x0694	0x1283      	BCF        STATUS, 5
0x0695	0x1303      	BCF        STATUS, 6
0x0696	0x00A7      	MOVWF      FARG_I2C1_Wr_data_
0x0697	0x2381      	CALL       _I2C1_Wr
;EEPROM.c,20 :: 		EEPROM_Val = I2C1_Rd(0u);       // Read the data (NO acknowledge)
0x0698	0x1283      	BCF        STATUS, 5
0x0699	0x1303      	BCF        STATUS, 6
0x069A	0x01A8      	CLRF       FARG_I2C1_Rd_ack
0x069B	0x221C      	CALL       _I2C1_Rd
0x069C	0x0870      	MOVF       R0, 0
0x069D	0x1283      	BCF        STATUS, 5
0x069E	0x00DC      	MOVWF      _EEPROM_Val
0x069F	0x01DD      	CLRF       _EEPROM_Val+1
;EEPROM.c,21 :: 		I2C1_Stop();               // issue I2C stop signal
0x06A0	0x2162      	CALL       _I2C1_Stop
;EEPROM.c,22 :: 		}
L_end_EEPROMReadVal:
0x06A1	0x0008      	RETURN
; end of _EEPROMReadVal
_main:
0x06A2	0x2750      	CALL       1872
;WaterHeaterFinalV2.c,92 :: 		void main() {
;WaterHeaterFinalV2.c,93 :: 		Init_Timer0();        // Inintializing the Timer & Loading the register with a value that gives 10ms before the overflow
0x06A3	0x2474      	CALL       _Init_Timer0
;WaterHeaterFinalV2.c,94 :: 		Init_ExtInt();        // Initializes the external interrupt for the power button (PORTB pin0).
0x06A4	0x2503      	CALL       _Init_ExtInt
;WaterHeaterFinalV2.c,95 :: 		ADC_Init();           // Inintializing the ADC
0x06A5	0x24D9      	CALL       _ADC_Init
;WaterHeaterFinalV2.c,96 :: 		Initialization();     // Sets initial directions & values of needed ports & pins
0x06A6	0x24F0      	CALL       _Initialization
;WaterHeaterFinalV2.c,97 :: 		I2C1_Init(100000);    // initialize I2C communication
0x06A7	0x3028      	MOVLW      40
0x06A8	0x1683      	BSF        STATUS, 5
0x06A9	0x0093      	MOVWF      SSPADD
0x06AA	0x25D7      	CALL       _I2C1_Init
;WaterHeaterFinalV2.c,99 :: 		while(1){
L_main29:
;WaterHeaterFinalV2.c,101 :: 		if(OnOffState == ON_STATE){
0x06AB	0x0843      	MOVF       _OnOffState, 0
0x06AC	0x3A01      	XORLW      1
0x06AD	0x1D03      	BTFSS      STATUS, 2
0x06AE	0x2EFA      	GOTO       L_main31
;WaterHeaterFinalV2.c,102 :: 		if(OnMode == ON_MODE_WORKING){
0x06AF	0x0861      	MOVF       _OnMode, 0
0x06B0	0x3A01      	XORLW      1
0x06B1	0x1D03      	BTFSS      STATUS, 2
0x06B2	0x2EF2      	GOTO       L_main32
;WaterHeaterFinalV2.c,103 :: 		Temp_Avg(void);    // Calling the Temp_Avg function to calculate the average temprature
0x06B3	0x260D      	CALL       _Temp_Avg
;WaterHeaterFinalV2.c,104 :: 		if((TempAvg+5) <= ReqTemp){
0x06B4	0x3005      	MOVLW      5
0x06B5	0x074A      	ADDWF      _TempAvg, 0
0x06B6	0x00F1      	MOVWF      R1
0x06B7	0x084B      	MOVF       _TempAvg+1, 0
0x06B8	0x1803      	BTFSC      STATUS, 0
0x06B9	0x3E01      	ADDLW      1
0x06BA	0x00F2      	MOVWF      R1+1
0x06BB	0x3080      	MOVLW      128
0x06BC	0x0647      	XORWF      _ReqTemp+1, 0
0x06BD	0x00F0      	MOVWF      R0
0x06BE	0x3080      	MOVLW      128
0x06BF	0x0672      	XORWF      R1+1, 0
0x06C0	0x0270      	SUBWF      R0, 0
0x06C1	0x1D03      	BTFSS      STATUS, 2
0x06C2	0x2EC5      	GOTO       L__main56
0x06C3	0x0871      	MOVF       R1, 0
0x06C4	0x0246      	SUBWF      _ReqTemp, 0
L__main56:
0x06C5	0x1C03      	BTFSS      STATUS, 0
0x06C6	0x2EC9      	GOTO       L_main33
;WaterHeaterFinalV2.c,105 :: 		Working_Mode = MODE_HEATING;          // Sets the working mode to heating state (Fan is Off & Heater On)
0x06C7	0x01C8      	CLRF       _Working_Mode
;WaterHeaterFinalV2.c,106 :: 		}else if((TempAvg-5) >= ReqTemp){
0x06C8	0x2EE0      	GOTO       L_main34
L_main33:
0x06C9	0x3005      	MOVLW      5
0x06CA	0x024A      	SUBWF      _TempAvg, 0
0x06CB	0x00F1      	MOVWF      R1
0x06CC	0x3000      	MOVLW      0
0x06CD	0x1C03      	BTFSS      STATUS, 0
0x06CE	0x3E01      	ADDLW      1
0x06CF	0x024B      	SUBWF      _TempAvg+1, 0
0x06D0	0x00F2      	MOVWF      R1+1
0x06D1	0x3080      	MOVLW      128
0x06D2	0x0672      	XORWF      R1+1, 0
0x06D3	0x00F0      	MOVWF      R0
0x06D4	0x3080      	MOVLW      128
0x06D5	0x0647      	XORWF      _ReqTemp+1, 0
0x06D6	0x0270      	SUBWF      R0, 0
0x06D7	0x1D03      	BTFSS      STATUS, 2
0x06D8	0x2EDB      	GOTO       L__main57
0x06D9	0x0846      	MOVF       _ReqTemp, 0
0x06DA	0x0271      	SUBWF      R1, 0
L__main57:
0x06DB	0x1C03      	BTFSS      STATUS, 0
0x06DC	0x2EE0      	GOTO       L_main35
;WaterHeaterFinalV2.c,107 :: 		Working_Mode = MODE_COOLING;          // Sets the working mode to cooling state (Fan is On & Heater off)
0x06DD	0x3001      	MOVLW      1
0x06DE	0x00C8      	MOVWF      _Working_Mode
;WaterHeaterFinalV2.c,108 :: 		}else{
0x06DF	0x2EE0      	GOTO       L_main36
L_main35:
;WaterHeaterFinalV2.c,110 :: 		}
L_main36:
L_main34:
;WaterHeaterFinalV2.c,111 :: 		if(Working_Mode == MODE_HEATING){         // Checks the condition to start heating
0x06E0	0x0848      	MOVF       _Working_Mode, 0
0x06E1	0x3A00      	XORLW      0
0x06E2	0x1D03      	BTFSS      STATUS, 2
0x06E3	0x2EE6      	GOTO       L_main37
;WaterHeaterFinalV2.c,112 :: 		Heater();                               // Calling the heater function
0x06E4	0x2509      	CALL       _Heater
;WaterHeaterFinalV2.c,113 :: 		}
0x06E5	0x2EF1      	GOTO       L_main38
L_main37:
;WaterHeaterFinalV2.c,114 :: 		else if(Working_Mode == MODE_COOLING){    // Checks the condition to start cooling
0x06E6	0x0848      	MOVF       _Working_Mode, 0
0x06E7	0x3A01      	XORLW      1
0x06E8	0x1D03      	BTFSS      STATUS, 2
0x06E9	0x2EEC      	GOTO       L_main39
;WaterHeaterFinalV2.c,115 :: 		Fan();                                  // Calling the Fan function
0x06EA	0x2530      	CALL       _Fan
;WaterHeaterFinalV2.c,116 :: 		}
0x06EB	0x2EF1      	GOTO       L_main40
L_main39:
;WaterHeaterFinalV2.c,117 :: 		else if(Working_Mode == MODE_WAITING){    // Checks the condition to maintain temprature
0x06EC	0x0848      	MOVF       _Working_Mode, 0
0x06ED	0x3A02      	XORLW      2
0x06EE	0x1D03      	BTFSS      STATUS, 2
0x06EF	0x2EF1      	GOTO       L_main41
;WaterHeaterFinalV2.c,118 :: 		Wait();                                 // Calling the wait function
0x06F0	0x2184      	CALL       _Wait
;WaterHeaterFinalV2.c,119 :: 		}
L_main41:
L_main40:
L_main38:
;WaterHeaterFinalV2.c,121 :: 		}else if(OnMode == ON_MODE_TEMP_SETTING){ // Checks the condition to enter temprature setting mode
0x06F1	0x2EF9      	GOTO       L_main42
L_main32:
0x06F2	0x0861      	MOVF       _OnMode, 0
0x06F3	0x3A00      	XORLW      0
0x06F4	0x1D03      	BTFSS      STATUS, 2
0x06F5	0x2EF9      	GOTO       L_main43
;WaterHeaterFinalV2.c,122 :: 		PORTB.B7 = 0;                           // Sets Heating state LED to LOW
0x06F6	0x1386      	BCF        PORTB, 7
;WaterHeaterFinalV2.c,123 :: 		PORTC.B5 = 0;                           // Setting PORT C pin5 (the heater) pin as LOW (Turning the heater is off)
0x06F7	0x1287      	BCF        PORTC, 5
;WaterHeaterFinalV2.c,124 :: 		PORTC.B2 = 0;                           // Setting PORT C pin2 (the fan) pin as LOW (Turning the fan is off)
0x06F8	0x1107      	BCF        PORTC, 2
;WaterHeaterFinalV2.c,125 :: 		}
L_main43:
L_main42:
;WaterHeaterFinalV2.c,127 :: 		}else{
0x06F9	0x2EFB      	GOTO       L_main44
L_main31:
;WaterHeaterFinalV2.c,128 :: 		Off_State();                              // Calls the Off state function that sets value of Ports & pins to 0
0x06FA	0x2481      	CALL       _Off_State
;WaterHeaterFinalV2.c,129 :: 		}
L_main44:
;WaterHeaterFinalV2.c,130 :: 		_7Seg(void);       // Calling the 7 Segment Display function to display the Average temprature
0x06FB	0x2485      	CALL       __7Seg
;WaterHeaterFinalV2.c,131 :: 		}
0x06FC	0x2EAB      	GOTO       L_main29
;WaterHeaterFinalV2.c,133 :: 		}
L_end_main:
0x06FD	0x2EFD      	GOTO       $+0
; end of _main
0x0750	0x3029      	MOVLW      41
0x0751	0x0084      	MOVWF      FSR
0x0752	0x303E      	MOVLW      62
0x0753	0x1283      	BCF        STATUS, 5
0x0754	0x1303      	BCF        STATUS, 6
0x0755	0x00F0      	MOVWF      R0
0x0756	0x3003      	MOVLW      3
0x0757	0x1683      	BSF        STATUS, 5
0x0758	0x00BF      	MOVWF      ___DoICPAddr
0x0759	0x3007      	MOVLW      7
0x075A	0x00C0      	MOVWF      192
0x075B	0x24CD      	CALL       1229
0x075C	0x30A0      	MOVLW      160
0x075D	0x0084      	MOVWF      FSR
0x075E	0x300A      	MOVLW      10
0x075F	0x1283      	BCF        STATUS, 5
0x0760	0x00F0      	MOVWF      R0
0x0761	0x3041      	MOVLW      65
0x0762	0x1683      	BSF        STATUS, 5
0x0763	0x00BF      	MOVWF      ___DoICPAddr
0x0764	0x3007      	MOVLW      7
0x0765	0x00C0      	MOVWF      192
0x0766	0x24CD      	CALL       1229
0x0767	0x3067      	MOVLW      103
0x0768	0x0084      	MOVWF      FSR
0x0769	0x3004      	MOVLW      4
0x076A	0x1283      	BCF        STATUS, 5
0x076B	0x00F0      	MOVWF      R0
0x076C	0x304B      	MOVLW      75
0x076D	0x1683      	BSF        STATUS, 5
0x076E	0x00BF      	MOVWF      ___DoICPAddr
0x076F	0x3007      	MOVLW      7
0x0770	0x00C0      	MOVWF      192
0x0771	0x24CD      	CALL       1229
0x0772	0x0008      	RETURN
;WaterHeaterFinalV2.c,0 :: ?ICS_Temp_Array_Counter
0x0703	0x3400 ;?ICS_Temp_Array_Counter+0
0x0704	0x3400 ;?ICS_Temp_Array_Counter+1
; end of ?ICS_Temp_Array_Counter
;WaterHeaterFinalV2.c,0 :: ?ICS_TempSum
0x0705	0x3400 ;?ICS_TempSum+0
0x0706	0x3400 ;?ICS_TempSum+1
; end of ?ICS_TempSum
;Temprature.c,0 :: ?ICS_SampleADC_Val
0x0707	0x3400 ;?ICS_SampleADC_Val+0
0x0708	0x3400 ;?ICS_SampleADC_Val+1
; end of ?ICS_SampleADC_Val
;Temprature.c,0 :: ?ICS_TempratureSamples
0x0709	0x3400 ;?ICS_TempratureSamples+0
0x070A	0x3400 ;?ICS_TempratureSamples+1
0x070B	0x3400 ;?ICS_TempratureSamples+2
0x070C	0x3400 ;?ICS_TempratureSamples+3
0x070D	0x3400 ;?ICS_TempratureSamples+4
0x070E	0x3400 ;?ICS_TempratureSamples+5
0x070F	0x3400 ;?ICS_TempratureSamples+6
0x0710	0x3400 ;?ICS_TempratureSamples+7
0x0711	0x3400 ;?ICS_TempratureSamples+8
0x0712	0x3400 ;?ICS_TempratureSamples+9
0x0713	0x3400 ;?ICS_TempratureSamples+10
0x0714	0x3400 ;?ICS_TempratureSamples+11
0x0715	0x3400 ;?ICS_TempratureSamples+12
0x0716	0x3400 ;?ICS_TempratureSamples+13
0x0717	0x3400 ;?ICS_TempratureSamples+14
0x0718	0x3400 ;?ICS_TempratureSamples+15
0x0719	0x3400 ;?ICS_TempratureSamples+16
0x071A	0x3400 ;?ICS_TempratureSamples+17
0x071B	0x3400 ;?ICS_TempratureSamples+18
0x071C	0x3400 ;?ICS_TempratureSamples+19
; end of ?ICS_TempratureSamples
;WaterHeaterFinalV2.c,0 :: ?ICS_OnOffState
0x071D	0x3400 ;?ICS_OnOffState+0
; end of ?ICS_OnOffState
;WaterHeaterFinalV2.c,0 :: ?ICS_Temp_Loop_Counter
0x071E	0x3400 ;?ICS_Temp_Loop_Counter+0
0x071F	0x3400 ;?ICS_Temp_Loop_Counter+1
; end of ?ICS_Temp_Loop_Counter
;WaterHeaterFinalV2.c,0 :: ?ICS_ReqTemp
0x0720	0x343C ;?ICS_ReqTemp+0
0x0721	0x3400 ;?ICS_ReqTemp+1
; end of ?ICS_ReqTemp
;WaterHeaterFinalV2.c,0 :: ?ICS_Working_Mode
0x0722	0x3402 ;?ICS_Working_Mode+0
; end of ?ICS_Working_Mode
;WaterHeaterFinalV2.c,0 :: ?ICS_HeatingStateLED
0x0723	0x3401 ;?ICS_HeatingStateLED+0
; end of ?ICS_HeatingStateLED
;WaterHeaterFinalV2.c,0 :: ?ICS_TempAvg
0x0724	0x3400 ;?ICS_TempAvg+0
0x0725	0x3400 ;?ICS_TempAvg+1
; end of ?ICS_TempAvg
;Temprature.c,0 :: ?ICS_ADC_Val
0x0726	0x3400 ;?ICS_ADC_Val+0
0x0727	0x3400 ;?ICS_ADC_Val+1
; end of ?ICS_ADC_Val
;Temprature.c,0 :: ?ICS_TempADC_Val
0x0728	0x3400 ;?ICS_TempADC_Val+0
0x0729	0x3400 ;?ICS_TempADC_Val+1
; end of ?ICS_TempADC_Val
;WaterHeaterFinalV2.c,0 :: ?ICS_Time_1_Sec
0x072A	0x3400 ;?ICS_Time_1_Sec+0
0x072B	0x3400 ;?ICS_Time_1_Sec+1
; end of ?ICS_Time_1_Sec
;WaterHeaterFinalV2.c,0 :: ?ICS_TempReadFlag
0x072C	0x3400 ;?ICS_TempReadFlag+0
; end of ?ICS_TempReadFlag
;WaterHeaterFinalV2.c,0 :: ?ICS_SegBlink
0x072D	0x3401 ;?ICS_SegBlink+0
; end of ?ICS_SegBlink
;WaterHeaterFinalV2.c,0 :: ?ICS_Time_5_Sec
0x072E	0x3400 ;?ICS_Time_5_Sec+0
0x072F	0x3400 ;?ICS_Time_5_Sec+1
; end of ?ICS_Time_5_Sec
;WaterHeaterFinalV2.c,0 :: ?ICS_ButtonsTCounter
0x0730	0x3400 ;?ICS_ButtonsTCounter+0
0x0731	0x3400 ;?ICS_ButtonsTCounter+1
; end of ?ICS_ButtonsTCounter
;__Lib_I2C_c34.c,0 :: ?ICS__Lib_I2C_c34__I2C1_TIMEOUT
0x0732	0x3400 ;?ICS__Lib_I2C_c34__I2C1_TIMEOUT+0
0x0733	0x3400 ;?ICS__Lib_I2C_c34__I2C1_TIMEOUT+1
0x0734	0x3400 ;?ICS__Lib_I2C_c34__I2C1_TIMEOUT+2
0x0735	0x3400 ;?ICS__Lib_I2C_c34__I2C1_TIMEOUT+3
; end of ?ICS__Lib_I2C_c34__I2C1_TIMEOUT
;WaterHeaterFinalV2.c,0 :: ?ICS_EEPROM_Val
0x0736	0x3400 ;?ICS_EEPROM_Val+0
0x0737	0x3400 ;?ICS_EEPROM_Val+1
; end of ?ICS_EEPROM_Val
;WaterHeaterFinalV2.c,0 :: ?ICS_TempTimeCounter
0x0738	0x3400 ;?ICS_TempTimeCounter+0
0x0739	0x3400 ;?ICS_TempTimeCounter+1
; end of ?ICS_TempTimeCounter
;__Lib_ADC_A_C.c,0 :: ?ICS_vref_mask
0x073A	0x340F ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
;WaterHeaterFinalV2.c,0 :: ?ICS_OnMode
0x073B	0x3401 ;?ICS_OnMode+0
; end of ?ICS_OnMode
;WaterHeaterFinalV2.c,0 :: ?ICS_SegNum1
0x073C	0x3400 ;?ICS_SegNum1+0
0x073D	0x3400 ;?ICS_SegNum1+1
; end of ?ICS_SegNum1
;WaterHeaterFinalV2.c,0 :: ?ICS_SegState
0x073E	0x3401 ;?ICS_SegState+0
; end of ?ICS_SegState
;WaterHeaterFinalV2.c,0 :: ?ICS_SegNum10
0x073F	0x3400 ;?ICS_SegNum10+0
0x0740	0x3400 ;?ICS_SegNum10+1
; end of ?ICS_SegNum10
;SSD.c,0 :: ?ICS_SSD
0x0741	0x343F ;?ICS_SSD+0
0x0742	0x3406 ;?ICS_SSD+1
0x0743	0x345B ;?ICS_SSD+2
0x0744	0x344F ;?ICS_SSD+3
0x0745	0x3466 ;?ICS_SSD+4
0x0746	0x346D ;?ICS_SSD+5
0x0747	0x347D ;?ICS_SSD+6
0x0748	0x3407 ;?ICS_SSD+7
0x0749	0x347F ;?ICS_SSD+8
0x074A	0x346F ;?ICS_SSD+9
; end of ?ICS_SSD
;WaterHeaterFinalV2.c,0 :: ?ICS_SegNum
0x074B	0x3400 ;?ICS_SegNum+0
0x074C	0x3400 ;?ICS_SegNum+1
; end of ?ICS_SegNum
;WaterHeaterFinalV2.c,0 :: ?ICS_TempSegNum
0x074D	0x3400 ;?ICS_TempSegNum+0
0x074E	0x3400 ;?ICS_TempSegNum+1
; end of ?ICS_TempSegNum
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [181]    _interrupt
0x00B9       [7]    _RES032
0x00C0       [4]    _FIXSIGN32
0x00C4      [12]    _SETFUN32
0x00D0       [7]    _____DoIFC
0x00D7      [16]    _I2C1_Is_Idle
0x00E7       [7]    _Delay_22us
0x00EE      [44]    _Div_16x16_S_L
0x011A      [47]    _NRM3232
0x0149      [13]    _SETIOV3224
0x0156      [12]    _SETFOV32
0x0162       [4]    _I2C1_Stop
0x0166      [30]    _int2double
0x0184       [8]    _Wait
0x018C       [7]    _____DoICP
0x0193      [40]    _ADC_Read
0x01BB      [97]    _Mul_32x32_FP
0x021C     [141]    _I2C1_Rd
0x02A9     [105]    _Div_16x16_S
0x0312      [93]    _double2int
0x036F      [18]    _TempStartRead
0x0381     [132]    _I2C1_Wr
0x0405      [94]    _I2C1_Start
0x0463      [17]    _Seg_State
0x0474      [13]    _Init_Timer0
0x0481       [4]    _Off_State
0x0485      [72]    __7Seg
0x04CD      [12]    ___CC2DW
0x04D9      [23]    _ADC_Init
0x04F0      [19]    _Initialization
0x0503       [6]    _Init_ExtInt
0x0509      [39]    _Heater
0x0530      [29]    _Fan
0x054D      [81]    _TempSettingMode
0x059E      [29]    _EEPROMWriteVal
0x05BB      [28]    _WorkingMode
0x05D7      [54]    _I2C1_Init
0x060D     [123]    _Temp_Avg
0x0688      [26]    _EEPROMReadVal
0x06A2      [91]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0020       [1]    __math_tempbD
0x0027       [1]    FARG_I2C1_Wr_data_
0x0028       [1]    FARG_I2C1_Rd_ack
0x0029       [2]    _Temp_Array_Counter
0x002B       [2]    _TempSum
0x002D       [2]    _SampleADC_Val
0x002F      [20]    _TempratureSamples
0x0043       [1]    _OnOffState
0x0044       [2]    _Temp_Loop_Counter
0x0046       [2]    _ReqTemp
0x0048       [1]    _Working_Mode
0x0049       [1]    _HeatingStateLED
0x004A       [2]    _TempAvg
0x004C       [2]    _ADC_Val
0x004E       [2]    _TempADC_Val
0x0050       [2]    _Time_1_Sec
0x0052       [1]    _TempReadFlag
0x0053       [1]    _SegBlink
0x0054       [2]    _Time_5_Sec
0x0056       [2]    _ButtonsTCounter
0x0058       [4]    __Lib_I2C_c34__I2C1_TIMEOUT
0x005C       [2]    _EEPROM_Val
0x005E       [2]    _TempTimeCounter
0x0060       [1]    _vref_mask
0x0061       [1]    _OnMode
0x0062       [2]    _SegNum1
0x0064       [1]    _SegState
0x0065       [2]    _SegNum10
0x0067       [2]    _SegNum
0x0069       [2]    _TempSegNum
0x006B       [1]    ___savePCLATH
0x006C       [1]    ___saveSTATUS
0x006D       [3]    _I2C_Stop_Ptr
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC3_bit
0x0088       [1]    TRISD
0x0091       [1]    SSPCON2
0x0093       [1]    SSPADD
0x0094       [1]    SSPSTAT
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
0x00A0      [10]    _SSD
0x00AA       [3]    _I2C1_Timeout_Ptr
0x00AD       [3]    _I2C_Is_Idle_Ptr
0x00B0       [3]    _ADC_Get_Sample_Ptr
0x00B3       [3]    _I2C_Read_Ptr
0x00B6       [3]    _I2C_Write_Ptr
0x00B9       [3]    _I2C_Start_Ptr
0x00BC       [3]    _I2C_Restart_Ptr
0x00BF       [2]    ___DoICPAddr
0x00C1       [4]    FARG_I2C1_Init_clock
0x00C5       [1]    FARG_ADC_Read_channel
0x00C6       [4]    I2C1_Wr_timeout_L0
0x00C6       [1]    I2C1_Rd_tmp_L0
0x00C6       [2]    I2C1_Start_j_L0
0x00C7       [4]    I2C1_Rd_timeout_L0
0x00C8       [4]    I2C1_Start_timeout_L0
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0703       [2]    ?ICS_Temp_Array_Counter
0x0705       [2]    ?ICS_TempSum
0x0707       [2]    ?ICS_SampleADC_Val
0x0709      [20]    ?ICS_TempratureSamples
0x071D       [1]    ?ICS_OnOffState
0x071E       [2]    ?ICS_Temp_Loop_Counter
0x0720       [2]    ?ICS_ReqTemp
0x0722       [1]    ?ICS_Working_Mode
0x0723       [1]    ?ICS_HeatingStateLED
0x0724       [2]    ?ICS_TempAvg
0x0726       [2]    ?ICS_ADC_Val
0x0728       [2]    ?ICS_TempADC_Val
0x072A       [2]    ?ICS_Time_1_Sec
0x072C       [1]    ?ICS_TempReadFlag
0x072D       [1]    ?ICS_SegBlink
0x072E       [2]    ?ICS_Time_5_Sec
0x0730       [2]    ?ICS_ButtonsTCounter
0x0732       [4]    ?ICS__Lib_I2C_c34__I2C1_TIMEOUT
0x0736       [2]    ?ICS_EEPROM_Val
0x0738       [2]    ?ICS_TempTimeCounter
0x073A       [1]    ?ICS_vref_mask
0x073B       [1]    ?ICS_OnMode
0x073C       [2]    ?ICS_SegNum1
0x073E       [1]    ?ICS_SegState
0x073F       [2]    ?ICS_SegNum10
0x0741      [10]    ?ICS_SSD
0x074B       [2]    ?ICS_SegNum
0x074D       [2]    ?ICS_TempSegNum
